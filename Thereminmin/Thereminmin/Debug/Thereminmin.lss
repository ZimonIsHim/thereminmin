
Thereminmin.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000fd0  2**0
                  ALLOC, LOAD, DATA
  1 .text         0000020a  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  00000fd0  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000fd0  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  0000102b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001ee8  00000000  00000000  00001153  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000c95  00000000  00000000  0000303b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000905  00000000  00000000  00003cd0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000026c  00000000  00000000  000045d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000310  00000000  00000000  00004844  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000537  00000000  00000000  00004b54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000c8  00000000  00000000  0000508b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000ede  00000ede  00000fb2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00005154  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .progmemx.data 0000001d  0000020a  0000020a  000002de  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 15 .rodata       0000001a  00800103  00000ee2  00000fb6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 16 .text.AUDIO_MATH_get_musical_value 000001ae  000006d2  000006d2  000007a6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.BUZZER_init 00000016  00000df6  00000df6  00000eca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.BUZZER_change_frequency 00000008  00000ec0  00000ec0  00000f94  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.COMMON_wait 0000001e  00000d8a  00000d8a  00000e5e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.LCD_strobe_lcd_e 00000026  00000cfa  00000cfa  00000dce  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.LCD_write_command 00000024  00000d20  00000d20  00000df4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.LCD_clear 0000001a  00000da8  00000da8  00000e7c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.LCD_init 00000036  00000c2e  00000c2e  00000d02  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.LCD_write_data 00000024  00000d44  00000d44  00000e18  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.LCD_display_text 0000001a  00000dc2  00000dc2  00000e96  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.LCD_set_cursor 00000008  00000ec8  00000ec8  00000f9c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .progmemx.data 0000000c  00000227  00000227  000002fb  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 28 .text.display_distance_on_lcd 000000ac  00000954  00000954  00000a28  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.main    00000036  00000c64  00000c64  00000d38  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__vector_10 00000016  00000e0c  00000e0c  00000ee0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__vector_8 0000008a  00000a00  00000a00  00000ad4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.US_init_pins 0000001a  00000ddc  00000ddc  00000eb0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.timer_init 00000010  00000e4a  00000e4a  00000f1e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.US_trigger 00000016  00000e22  00000e22  00000ef6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.US_init 0000000a  00000eac  00000eac  00000f80  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .bss.distance 00000004  0080011d  0080011d  00000fd0  2**0
                  ALLOC
 37 .bss.ticksOnTrigger 00000001  00800121  00800121  00000fd0  2**0
                  ALLOC
 38 .text.avrlibc.fplib 0000000e  00000e5a  00000e5a  00000f2e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.avrlibc.fplib 0000005e  00000b04  00000b04  00000bd8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.avrlibc.fplib 0000007a  00000a8a  00000a8a  00000b5e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .text.avrlibc.fplib 00000044  00000baa  00000baa  00000c7e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .text.avrlibc.fplib 0000000e  00000e68  00000e68  00000f3c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .text.avrlibc.fplib 0000000a  00000eb6  00000eb6  00000f8a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .text.avrlibc.fplib 00000008  00000ed0  00000ed0  00000fa4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .text.avrlibc.fplib 000000d4  00000880  00000880  00000954  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .text.avrlibc.fplib 00000048  00000b62  00000b62  00000c36  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .text.avrlibc.fplib 0000000c  00000ea0  00000ea0  00000f74  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .text.avrlibc.fplib 00000006  00000ed8  00000ed8  00000fac  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .text.avrlibc.fplib 0000000e  00000e76  00000e76  00000f4a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .text.avrlibc.fplib 0000000e  00000e84  00000e84  00000f58  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .text.avrlibc.fplib 00000022  00000d68  00000d68  00000e3c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .text.libgcc  00000012  00000e38  00000e38  00000f0c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .text.avrlibc 00000040  00000bee  00000bee  00000cc2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .text.avrlibc 00000032  00000c9a  00000c9a  00000d6e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .text.avrlibc 0000002e  00000ccc  00000ccc  00000da0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .text.avrlibc 000002ee  00000234  00000234  00000308  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .text.avrlibc 000001b0  00000522  00000522  000005f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .text.libgcc  0000000e  00000e92  00000e92  00000f66  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 d9 00 	jmp	0x1b2	; 0x1b2 <__ctors_end>
   4:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
   8:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
   c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  10:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  14:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  18:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  1c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  20:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__vector_8>
  24:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  28:	0c 94 06 07 	jmp	0xe0c	; 0xe0c <__vector_10>
  2c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  30:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  34:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  38:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  3c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  40:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  44:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  48:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  4c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  50:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  54:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  58:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  5c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  60:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  64:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  68:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  6c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  70:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  74:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  78:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  7c:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  80:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  84:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  88:	0c 94 6f 07 	jmp	0xede	; 0xede <__bad_interrupt>
  8c:	9c 03       	fmulsu	r17, r20
  8e:	a6 03       	fmuls	r18, r22
  90:	b0 03       	fmuls	r19, r16
  92:	ba 03       	fmulsu	r19, r18
  94:	c4 03       	fmuls	r20, r20
  96:	ce 03       	fmulsu	r20, r22
  98:	d8 03       	fmulsu	r21, r16
  9a:	e2 03       	fmuls	r22, r18
  9c:	ec 03       	fmulsu	r22, r20
  9e:	f6 03       	fmuls	r23, r22
  a0:	00 04       	cpc	r0, r0
  a2:	0a 04       	cpc	r0, r10
  a4:	14 04       	cpc	r1, r4

000000a6 <.dinit>:
  a6:	01 00       	.word	0x0001	; ????
  a8:	01 03       	mulsu	r16, r17
  aa:	80 01       	movw	r16, r0
  ac:	03 01       	movw	r0, r6
  ae:	1d 00       	.word	0x001d	; ????
  b0:	0e e2       	ldi	r16, 0x2E	; 46
  b2:	01 1d       	adc	r16, r1
  b4:	01 22       	and	r0, r17
  b6:	80 00       	.word	0x0080	; ????

000000b8 <__trampolines_end>:
  b8:	00 40       	sbci	r16, 0x00	; 0
  ba:	7a 10       	cpse	r7, r10
  bc:	f3 5a       	subi	r31, 0xA3	; 163
  be:	00 a0       	ldd	r0, Z+32	; 0x20
  c0:	72 4e       	sbci	r23, 0xE2	; 226
  c2:	18 09       	sbc	r17, r8
  c4:	00 10       	cpse	r0, r0
  c6:	a5 d4       	rcall	.+2378   	; 0xa12 <__vector_8+0x12>
  c8:	e8 00       	.word	0x00e8	; ????
  ca:	00 e8       	ldi	r16, 0x80	; 128
  cc:	76 48       	sbci	r23, 0x86	; 134
  ce:	17 00       	.word	0x0017	; ????
  d0:	00 e4       	ldi	r16, 0x40	; 64
  d2:	0b 54       	subi	r16, 0x4B	; 75
  d4:	02 00       	.word	0x0002	; ????
  d6:	00 ca       	rjmp	.-3072   	; 0xfffff4d8 <__eeprom_end+0xff7ef4d8>
  d8:	9a 3b       	cpi	r25, 0xBA	; 186
  da:	00 00       	nop
  dc:	00 e1       	ldi	r16, 0x10	; 16
  de:	f5 05       	cpc	r31, r5
  e0:	00 00       	nop
  e2:	80 96       	adiw	r24, 0x20	; 32
  e4:	98 00       	.word	0x0098	; ????
  e6:	00 00       	nop
  e8:	40 42       	sbci	r20, 0x20	; 32
  ea:	0f 00       	.word	0x000f	; ????
  ec:	00 00       	nop
  ee:	a0 86       	std	Z+8, r10	; 0x08
  f0:	01 00       	.word	0x0001	; ????
  f2:	00 00       	nop
  f4:	10 27       	eor	r17, r16
  f6:	00 00       	nop
  f8:	00 00       	nop
  fa:	e8 03       	fmulsu	r22, r16
  fc:	00 00       	nop
  fe:	00 00       	nop
 100:	64 00       	.word	0x0064	; ????
 102:	00 00       	nop
 104:	00 00       	nop
 106:	0a 00       	.word	0x000a	; ????
 108:	00 00       	nop
 10a:	00 00       	nop
 10c:	01 00       	.word	0x0001	; ????
 10e:	00 00       	nop
 110:	00 00       	nop
 112:	2c 76       	andi	r18, 0x6C	; 108
 114:	d8 88       	ldd	r13, Y+16	; 0x10
 116:	dc 67       	ori	r29, 0x7C	; 124
 118:	4f 08       	sbc	r4, r15
 11a:	23 df       	rcall	.-442    	; 0xffffff62 <__eeprom_end+0xff7eff62>
 11c:	c1 df       	rcall	.-126    	; 0xa0 <__SREG__+0x61>
 11e:	ae 59       	subi	r26, 0x9E	; 158
 120:	e1 b1       	in	r30, 0x01	; 1
 122:	b7 96       	adiw	r30, 0x27	; 39
 124:	e5 e3       	ldi	r30, 0x35	; 53
 126:	e4 53       	subi	r30, 0x34	; 52
 128:	c6 3a       	cpi	r28, 0xA6	; 166
 12a:	e6 51       	subi	r30, 0x16	; 22
 12c:	99 76       	andi	r25, 0x69	; 105
 12e:	96 e8       	ldi	r25, 0x86	; 134
 130:	e6 c2       	rjmp	.+1484   	; 0x6fe <AUDIO_MATH_get_musical_value+0x2c>
 132:	84 26       	eor	r8, r20
 134:	eb 89       	ldd	r30, Y+19	; 0x13
 136:	8c 9b       	sbis	0x11, 4	; 17
 138:	62 ed       	ldi	r22, 0xD2	; 210
 13a:	40 7c       	andi	r20, 0xC0	; 192
 13c:	6f fc       	.word	0xfc6f	; ????
 13e:	ef bc       	out	0x2f, r14	; 47
 140:	9c 9f       	mul	r25, r28
 142:	40 f2       	brcs	.-112    	; 0xd4 <__trampolines_end+0x1c>
 144:	ba a5       	ldd	r27, Y+42	; 0x2a
 146:	6f a5       	ldd	r22, Y+47	; 0x2f
 148:	f4 90       	lpm	r15, Z
 14a:	05 5a       	subi	r16, 0xA5	; 165
 14c:	2a f7       	brpl	.-54     	; 0x118 <__trampolines_end+0x60>
 14e:	5c 93       	st	X, r21
 150:	6b 6c       	ori	r22, 0xCB	; 203
 152:	f9 67       	ori	r31, 0x79	; 121
 154:	6d c1       	rjmp	.+730    	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 156:	1b fc       	.word	0xfc1b	; ????
 158:	e0 e4       	ldi	r30, 0x40	; 64
 15a:	0d 47       	sbci	r16, 0x7D	; 125
 15c:	fe f5       	brtc	.+126    	; 0x1dc <__do_copy_data+0x1e>
 15e:	20 e6       	ldi	r18, 0x60	; 96
 160:	b5 00       	.word	0x00b5	; ????
 162:	d0 ed       	ldi	r29, 0xD0	; 208
 164:	90 2e       	mov	r9, r16
 166:	03 00       	.word	0x0003	; ????
 168:	94 35       	cpi	r25, 0x54	; 84
 16a:	77 05       	cpc	r23, r7
 16c:	00 80       	ld	r0, Z
 16e:	84 1e       	adc	r8, r20
 170:	08 00       	.word	0x0008	; ????
 172:	00 20       	and	r0, r0
 174:	4e 0a       	sbc	r4, r30
 176:	00 00       	nop
 178:	00 c8       	rjmp	.-4096   	; 0xfffff17a <__eeprom_end+0xff7ef17a>
 17a:	0c 33       	cpi	r16, 0x3C	; 60
 17c:	33 33       	cpi	r19, 0x33	; 51
 17e:	33 0f       	add	r19, r19
 180:	98 6e       	ori	r25, 0xE8	; 232
 182:	12 83       	std	Z+2, r17	; 0x02
 184:	11 41       	sbci	r17, 0x11	; 17
 186:	ef 8d       	ldd	r30, Y+31	; 0x1f
 188:	21 14       	cp	r2, r1
 18a:	89 3b       	cpi	r24, 0xB9	; 185
 18c:	e6 55       	subi	r30, 0x56	; 86
 18e:	16 cf       	rjmp	.-468    	; 0xffffffbc <__eeprom_end+0xff7effbc>
 190:	fe e6       	ldi	r31, 0x6E	; 110
 192:	db 18       	sub	r13, r11
 194:	d1 84       	ldd	r13, Z+9	; 0x09
 196:	4b 38       	cpi	r20, 0x8B	; 139
 198:	1b f7       	brvc	.-58     	; 0x160 <__trampolines_end+0xa8>
 19a:	7c 1d       	adc	r23, r12
 19c:	90 1d       	adc	r25, r0
 19e:	a4 bb       	out	0x14, r26	; 20
 1a0:	e4 24       	eor	r14, r4
 1a2:	20 32       	cpi	r18, 0x20	; 32
 1a4:	84 72       	andi	r24, 0x24	; 36
 1a6:	5e 22       	and	r5, r30
 1a8:	81 00       	.word	0x0081	; ????
 1aa:	c9 f1       	breq	.+114    	; 0x21e <_etext+0x14>
 1ac:	24 ec       	ldi	r18, 0xC4	; 196
 1ae:	a1 e5       	ldi	r26, 0x51	; 81
 1b0:	3d 27       	eor	r19, r29

000001b2 <__ctors_end>:
 1b2:	11 24       	eor	r1, r1
 1b4:	1f be       	out	0x3f, r1	; 63
 1b6:	cf ef       	ldi	r28, 0xFF	; 255
 1b8:	d0 e1       	ldi	r29, 0x10	; 16
 1ba:	de bf       	out	0x3e, r29	; 62
 1bc:	cd bf       	out	0x3d, r28	; 61

000001be <__do_copy_data>:
 1be:	e6 ea       	ldi	r30, 0xA6	; 166
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	40 e0       	ldi	r20, 0x00	; 0
 1c4:	19 c0       	rjmp	.+50     	; 0x1f8 <__do_clear_bss+0x8>
 1c6:	b7 91       	elpm	r27, Z+
 1c8:	a7 91       	elpm	r26, Z+
 1ca:	37 91       	elpm	r19, Z+
 1cc:	27 91       	elpm	r18, Z+
 1ce:	07 91       	elpm	r16, Z+
 1d0:	07 fd       	sbrc	r16, 7
 1d2:	0e c0       	rjmp	.+28     	; 0x1f0 <__do_clear_bss>
 1d4:	97 91       	elpm	r25, Z+
 1d6:	87 91       	elpm	r24, Z+
 1d8:	ef 01       	movw	r28, r30
 1da:	f9 2f       	mov	r31, r25
 1dc:	e8 2f       	mov	r30, r24
 1de:	0b bf       	out	0x3b, r16	; 59
 1e0:	07 90       	elpm	r0, Z+
 1e2:	0d 92       	st	X+, r0
 1e4:	a2 17       	cp	r26, r18
 1e6:	b3 07       	cpc	r27, r19
 1e8:	d9 f7       	brne	.-10     	; 0x1e0 <__do_copy_data+0x22>
 1ea:	fe 01       	movw	r30, r28
 1ec:	1b be       	out	0x3b, r1	; 59
 1ee:	04 c0       	rjmp	.+8      	; 0x1f8 <__do_clear_bss+0x8>

000001f0 <__do_clear_bss>:
 1f0:	1d 92       	st	X+, r1
 1f2:	a2 17       	cp	r26, r18
 1f4:	b3 07       	cpc	r27, r19
 1f6:	e1 f7       	brne	.-8      	; 0x1f0 <__do_clear_bss>
 1f8:	e7 3b       	cpi	r30, 0xB7	; 183
 1fa:	f4 07       	cpc	r31, r20
 1fc:	21 f7       	brne	.-56     	; 0x1c6 <__do_copy_data+0x8>
 1fe:	0e 94 32 06 	call	0xc64	; 0xc64 <main>
 202:	0c 94 03 01 	jmp	0x206	; 0x206 <_exit>

00000206 <_exit>:
 206:	f8 94       	cli

00000208 <__stop_program>:
 208:	ff cf       	rjmp	.-2      	; 0x208 <__stop_program>

Disassembly of section .text:

00000ede <__bad_interrupt>:
 ede:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.AUDIO_MATH_get_musical_value:

000006d2 <AUDIO_MATH_get_musical_value>:
 *  Author: ZimonIsHim
 */ 

const char *noteToPlay; // extern from headerfile

char AUDIO_MATH_get_musical_value(double distance) {
 6d2:	cf 92       	push	r12
 6d4:	df 92       	push	r13
 6d6:	ef 92       	push	r14
 6d8:	ff 92       	push	r15
 6da:	0f 93       	push	r16
 6dc:	1f 93       	push	r17
 6de:	cf 93       	push	r28
 6e0:	df 93       	push	r29
 6e2:	cd b7       	in	r28, 0x3d	; 61
 6e4:	de b7       	in	r29, 0x3e	; 62
 6e6:	6a 97       	sbiw	r28, 0x1a	; 26
 6e8:	0f b6       	in	r0, 0x3f	; 63
 6ea:	f8 94       	cli
 6ec:	de bf       	out	0x3e, r29	; 62
 6ee:	0f be       	out	0x3f, r0	; 63
 6f0:	cd bf       	out	0x3d, r28	; 61
 6f2:	6b 01       	movw	r12, r22
 6f4:	7c 01       	movw	r14, r24
	int notes_to_increment;
	
	if (distance > 50) { // If distance greater than 50 we return silence.
 6f6:	20 e0       	ldi	r18, 0x00	; 0
 6f8:	30 e0       	ldi	r19, 0x00	; 0
 6fa:	48 e4       	ldi	r20, 0x48	; 72
 6fc:	52 e4       	ldi	r21, 0x42	; 66
 6fe:	0e 94 5b 07 	call	0xeb6	; 0xeb6 <__gesf2>
 702:	18 16       	cp	r1, r24
 704:	0c f4       	brge	.+2      	; 0x708 <AUDIO_MATH_get_musical_value+0x36>
 706:	ac c0       	rjmp	.+344    	; 0x860 <AUDIO_MATH_get_musical_value+0x18e>
		return (char)0;
	} else {
		notes_to_increment = distance / (50 / 12);
 708:	20 e0       	ldi	r18, 0x00	; 0
 70a:	30 e0       	ldi	r19, 0x00	; 0
 70c:	40 e8       	ldi	r20, 0x80	; 128
 70e:	5e e3       	ldi	r21, 0x3E	; 62
 710:	c7 01       	movw	r24, r14
 712:	b6 01       	movw	r22, r12
 714:	0e 94 68 07 	call	0xed0	; 0xed0 <__mulsf3>
 718:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fixsfsi>
		
		switch(notes_to_increment) {
 71c:	8b 01       	movw	r16, r22
 71e:	07 2e       	mov	r0, r23
 720:	00 0c       	add	r0, r0
 722:	22 0b       	sbc	r18, r18
 724:	33 0b       	sbc	r19, r19
 726:	0d 30       	cpi	r16, 0x0D	; 13
 728:	11 05       	cpc	r17, r1
 72a:	08 f0       	brcs	.+2      	; 0x72e <AUDIO_MATH_get_musical_value+0x5c>
 72c:	86 c0       	rjmp	.+268    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
 72e:	f8 01       	movw	r30, r16
 730:	ea 5b       	subi	r30, 0xBA	; 186
 732:	ff 4f       	sbci	r31, 0xFF	; 255
 734:	0c 94 1c 07 	jmp	0xe38	; 0xe38 <__tablejump2__>
			case 0:
			noteToPlay = "A";
 738:	2a e0       	ldi	r18, 0x0A	; 10
 73a:	32 e0       	ldi	r19, 0x02	; 2
 73c:	40 e0       	ldi	r20, 0x00	; 0
 73e:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 742:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 746:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 74a:	77 c0       	rjmp	.+238    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 1:
			noteToPlay = "A#";
 74c:	2c e0       	ldi	r18, 0x0C	; 12
 74e:	32 e0       	ldi	r19, 0x02	; 2
 750:	40 e0       	ldi	r20, 0x00	; 0
 752:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 756:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 75a:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 75e:	6d c0       	rjmp	.+218    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 2:
			noteToPlay = "B";
 760:	2f e0       	ldi	r18, 0x0F	; 15
 762:	32 e0       	ldi	r19, 0x02	; 2
 764:	40 e0       	ldi	r20, 0x00	; 0
 766:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 76a:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 76e:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 772:	63 c0       	rjmp	.+198    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 3:
			noteToPlay = "C";
 774:	21 e1       	ldi	r18, 0x11	; 17
 776:	32 e0       	ldi	r19, 0x02	; 2
 778:	40 e0       	ldi	r20, 0x00	; 0
 77a:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 77e:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 782:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 786:	59 c0       	rjmp	.+178    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 4:
			noteToPlay = "C#";
 788:	23 e1       	ldi	r18, 0x13	; 19
 78a:	32 e0       	ldi	r19, 0x02	; 2
 78c:	40 e0       	ldi	r20, 0x00	; 0
 78e:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 792:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 796:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 79a:	4f c0       	rjmp	.+158    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 5:
			noteToPlay = "D";
 79c:	26 e1       	ldi	r18, 0x16	; 22
 79e:	32 e0       	ldi	r19, 0x02	; 2
 7a0:	40 e0       	ldi	r20, 0x00	; 0
 7a2:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 7a6:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7aa:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 7ae:	45 c0       	rjmp	.+138    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 6:
			noteToPlay = "D#";
 7b0:	28 e1       	ldi	r18, 0x18	; 24
 7b2:	32 e0       	ldi	r19, 0x02	; 2
 7b4:	40 e0       	ldi	r20, 0x00	; 0
 7b6:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 7ba:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7be:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 7c2:	3b c0       	rjmp	.+118    	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 7:
			noteToPlay = "E";
 7c4:	2b e1       	ldi	r18, 0x1B	; 27
 7c6:	32 e0       	ldi	r19, 0x02	; 2
 7c8:	40 e0       	ldi	r20, 0x00	; 0
 7ca:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 7ce:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7d2:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 7d6:	31 c0       	rjmp	.+98     	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 8:
			noteToPlay = "F";
 7d8:	2d e1       	ldi	r18, 0x1D	; 29
 7da:	32 e0       	ldi	r19, 0x02	; 2
 7dc:	40 e0       	ldi	r20, 0x00	; 0
 7de:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 7e2:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7e6:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 7ea:	27 c0       	rjmp	.+78     	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 9:
			noteToPlay = "F#";
 7ec:	2f e1       	ldi	r18, 0x1F	; 31
 7ee:	32 e0       	ldi	r19, 0x02	; 2
 7f0:	40 e0       	ldi	r20, 0x00	; 0
 7f2:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 7f6:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7fa:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 7fe:	1d c0       	rjmp	.+58     	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 10:
			noteToPlay = "G";
 800:	22 e2       	ldi	r18, 0x22	; 34
 802:	32 e0       	ldi	r19, 0x02	; 2
 804:	40 e0       	ldi	r20, 0x00	; 0
 806:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 80a:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 80e:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 812:	13 c0       	rjmp	.+38     	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 11:
			noteToPlay = "G#";
 814:	24 e2       	ldi	r18, 0x24	; 36
 816:	32 e0       	ldi	r19, 0x02	; 2
 818:	40 e0       	ldi	r20, 0x00	; 0
 81a:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 81e:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 822:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
 826:	09 c0       	rjmp	.+18     	; 0x83a <AUDIO_MATH_get_musical_value+0x168>
			case 12:
			noteToPlay = "A";
 828:	2a e0       	ldi	r18, 0x0A	; 10
 82a:	32 e0       	ldi	r19, 0x02	; 2
 82c:	40 e0       	ldi	r20, 0x00	; 0
 82e:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__DATA_REGION_ORIGIN__>
 832:	30 93 01 01 	sts	0x0101, r19	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 836:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
			break;
		}
	}
	
					   //  A,  A#,  B,   C,  C#,   D,   D#, E,  F,  F#, G,  G#, A
	const int values[] = {140, 133, 125, 118, 111, 103, 99, 93, 89, 84, 78, 74, 70};
 83a:	2a e1       	ldi	r18, 0x1A	; 26
 83c:	e3 e0       	ldi	r30, 0x03	; 3
 83e:	f1 e0       	ldi	r31, 0x01	; 1
 840:	de 01       	movw	r26, r28
 842:	11 96       	adiw	r26, 0x01	; 1
 844:	01 90       	ld	r0, Z+
 846:	0d 92       	st	X+, r0
 848:	2a 95       	dec	r18
 84a:	e1 f7       	brne	.-8      	; 0x844 <AUDIO_MATH_get_musical_value+0x172>
	
	return values[notes_to_increment];
 84c:	66 0f       	add	r22, r22
 84e:	77 1f       	adc	r23, r23
 850:	e1 e0       	ldi	r30, 0x01	; 1
 852:	f0 e0       	ldi	r31, 0x00	; 0
 854:	ec 0f       	add	r30, r28
 856:	fd 1f       	adc	r31, r29
 858:	e6 0f       	add	r30, r22
 85a:	f7 1f       	adc	r31, r23
 85c:	80 81       	ld	r24, Z
 85e:	01 c0       	rjmp	.+2      	; 0x862 <AUDIO_MATH_get_musical_value+0x190>

char AUDIO_MATH_get_musical_value(double distance) {
	int notes_to_increment;
	
	if (distance > 50) { // If distance greater than 50 we return silence.
		return (char)0;
 860:	80 e0       	ldi	r24, 0x00	; 0
	
					   //  A,  A#,  B,   C,  C#,   D,   D#, E,  F,  F#, G,  G#, A
	const int values[] = {140, 133, 125, 118, 111, 103, 99, 93, 89, 84, 78, 74, 70};
	
	return values[notes_to_increment];
 862:	6a 96       	adiw	r28, 0x1a	; 26
 864:	0f b6       	in	r0, 0x3f	; 63
 866:	f8 94       	cli
 868:	de bf       	out	0x3e, r29	; 62
 86a:	0f be       	out	0x3f, r0	; 63
 86c:	cd bf       	out	0x3d, r28	; 61
 86e:	df 91       	pop	r29
 870:	cf 91       	pop	r28
 872:	1f 91       	pop	r17
 874:	0f 91       	pop	r16
 876:	ff 90       	pop	r15
 878:	ef 90       	pop	r14
 87a:	df 90       	pop	r13
 87c:	cf 90       	pop	r12
 87e:	08 95       	ret

Disassembly of section .text.BUZZER_init:

00000df6 <BUZZER_init>:
#include <avr/io.h>

// Initialize timer 1: fast PWM at pin PORTB.5
void BUZZER_init( void )
{
	DDRB = 0xFF;					// set PORTB for compare output
 df6:	8f ef       	ldi	r24, 0xFF	; 255
 df8:	87 bb       	out	0x17, r24	; 23
	OCR1A = 140;					// sets the top value of Timer 1 to 140
 dfa:	8c e8       	ldi	r24, 0x8C	; 140
 dfc:	90 e0       	ldi	r25, 0x00	; 0
 dfe:	9b bd       	out	0x2b, r25	; 43
 e00:	8a bd       	out	0x2a, r24	; 42
	TCCR1A = 0b01101011;		// sets timer 1 to: compare output OC1A,OC1B,OC1C
 e02:	8b e6       	ldi	r24, 0x6B	; 107
 e04:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0b00011011;		// sets timer 1 to:fast PWM 8 bit, prescaler=64, RUN
 e06:	8b e1       	ldi	r24, 0x1B	; 27
 e08:	8e bd       	out	0x2e, r24	; 46
 e0a:	08 95       	ret

Disassembly of section .text.BUZZER_change_frequency:

00000ec0 <BUZZER_change_frequency>:
}

void BUZZER_change_frequency(char frequency) {
	OCR1A = frequency; //changes the top value of the timer which causes a shift in pwm value
 ec0:	90 e0       	ldi	r25, 0x00	; 0
 ec2:	9b bd       	out	0x2b, r25	; 43
 ec4:	8a bd       	out	0x2a, r24	; 42
 ec6:	08 95       	ret

Disassembly of section .text.COMMON_wait:

00000d8a <COMMON_wait>:
 */ 
#define F_CPU 8000000UL
#include <util/delay.h>

void COMMON_wait( int ms ) {
	for (int i=0; i<ms; i++) {
 d8a:	20 e0       	ldi	r18, 0x00	; 0
 d8c:	30 e0       	ldi	r19, 0x00	; 0
 d8e:	08 c0       	rjmp	.+16     	; 0xda0 <COMMON_wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 d90:	ef ec       	ldi	r30, 0xCF	; 207
 d92:	f7 e0       	ldi	r31, 0x07	; 7
 d94:	31 97       	sbiw	r30, 0x01	; 1
 d96:	f1 f7       	brne	.-4      	; 0xd94 <COMMON_wait+0xa>
 d98:	00 c0       	rjmp	.+0      	; 0xd9a <COMMON_wait+0x10>
 d9a:	00 00       	nop
 d9c:	2f 5f       	subi	r18, 0xFF	; 255
 d9e:	3f 4f       	sbci	r19, 0xFF	; 255
 da0:	28 17       	cp	r18, r24
 da2:	39 07       	cpc	r19, r25
 da4:	ac f3       	brlt	.-22     	; 0xd90 <COMMON_wait+0x6>
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
 da6:	08 95       	ret

Disassembly of section .text.LCD_strobe_lcd_e:

00000cfa <LCD_strobe_lcd_e>:
#include <util/delay.h>
#include <avr/interrupt.h>
#include <xc.h>

void LCD_strobe_lcd_e(void) {
	PORTC |= (1<<LCD_E);	// E high
 cfa:	85 b3       	in	r24, 0x15	; 21
 cfc:	88 60       	ori	r24, 0x08	; 8
 cfe:	85 bb       	out	0x15, r24	; 21
 d00:	8f ec       	ldi	r24, 0xCF	; 207
 d02:	97 e0       	ldi	r25, 0x07	; 7
 d04:	01 97       	sbiw	r24, 0x01	; 1
 d06:	f1 f7       	brne	.-4      	; 0xd04 <LCD_strobe_lcd_e+0xa>
 d08:	00 c0       	rjmp	.+0      	; 0xd0a <LCD_strobe_lcd_e+0x10>
 d0a:	00 00       	nop
	_delay_ms(1);			// nodig
	PORTC &= ~(1<<LCD_E);  	// E low
 d0c:	85 b3       	in	r24, 0x15	; 21
 d0e:	87 7f       	andi	r24, 0xF7	; 247
 d10:	85 bb       	out	0x15, r24	; 21
 d12:	8f ec       	ldi	r24, 0xCF	; 207
 d14:	97 e0       	ldi	r25, 0x07	; 7
 d16:	01 97       	sbiw	r24, 0x01	; 1
 d18:	f1 f7       	brne	.-4      	; 0xd16 <LCD_strobe_lcd_e+0x1c>
 d1a:	00 c0       	rjmp	.+0      	; 0xd1c <LCD_strobe_lcd_e+0x22>
 d1c:	00 00       	nop
 d1e:	08 95       	ret

Disassembly of section .text.LCD_write_command:

00000d20 <LCD_write_command>:
	_delay_ms(1);			// nodig
}

void LCD_write_command(unsigned char byte)
{
 d20:	cf 93       	push	r28
 d22:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 d24:	85 bb       	out	0x15, r24	; 21
	PORTC &= ~(1<<LCD_RS);
 d26:	85 b3       	in	r24, 0x15	; 21
 d28:	8b 7f       	andi	r24, 0xFB	; 251
 d2a:	85 bb       	out	0x15, r24	; 21
	LCD_strobe_lcd_e();
 d2c:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 d30:	c2 95       	swap	r28
 d32:	c0 7f       	andi	r28, 0xF0	; 240
 d34:	c5 bb       	out	0x15, r28	; 21
	PORTC &= ~(1<<LCD_RS);
 d36:	85 b3       	in	r24, 0x15	; 21
 d38:	8b 7f       	andi	r24, 0xFB	; 251
 d3a:	85 bb       	out	0x15, r24	; 21
	LCD_strobe_lcd_e();
 d3c:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>
}
 d40:	cf 91       	pop	r28
 d42:	08 95       	ret

Disassembly of section .text.LCD_clear:

00000da8 <LCD_clear>:

void LCD_clear() {
	LCD_write_command (0x01);						//Leeg display
 da8:	81 e0       	ldi	r24, 0x01	; 1
 daa:	0e 94 90 06 	call	0xd20	; 0xd20 <LCD_write_command>
 dae:	8f e9       	ldi	r24, 0x9F	; 159
 db0:	9f e0       	ldi	r25, 0x0F	; 15
 db2:	01 97       	sbiw	r24, 0x01	; 1
 db4:	f1 f7       	brne	.-4      	; 0xdb2 <LCD_clear+0xa>
 db6:	00 c0       	rjmp	.+0      	; 0xdb8 <LCD_clear+0x10>
 db8:	00 00       	nop
	_delay_ms(2);
	LCD_write_command (0x80);						//Cursor terug naar start
 dba:	80 e8       	ldi	r24, 0x80	; 128
 dbc:	0e 94 90 06 	call	0xd20	; 0xd20 <LCD_write_command>
 dc0:	08 95       	ret

Disassembly of section .text.LCD_init:

00000c2e <LCD_init>:
}

void LCD_init() {
	// PORTC output mode and all low (also E and RS pin)
	DDRC = 0xFF;
 c2e:	8f ef       	ldi	r24, 0xFF	; 255
 c30:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
 c32:	15 ba       	out	0x15, r1	; 21

	// Step 2 (table 12)
	PORTC = 0x20;	// function set
 c34:	80 e2       	ldi	r24, 0x20	; 32
 c36:	85 bb       	out	0x15, r24	; 21
	LCD_strobe_lcd_e();
 c38:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Display on/off control
 c3c:	15 ba       	out	0x15, r1	; 21
	LCD_strobe_lcd_e();
 c3e:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>
	PORTC = 0xC0; // Display on, cursor off and blinking off
 c42:	80 ec       	ldi	r24, 0xC0	; 192
 c44:	85 bb       	out	0x15, r24	; 21
	LCD_strobe_lcd_e();
 c46:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>

	// Step 4 (table 12)
	PORTC = 0x00;   // Entry mode set
 c4a:	15 ba       	out	0x15, r1	; 21
	LCD_strobe_lcd_e();
 c4c:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>
	PORTC = 0x60;
 c50:	80 e6       	ldi	r24, 0x60	; 96
 c52:	85 bb       	out	0x15, r24	; 21
	LCD_strobe_lcd_e();
 c54:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>
	
	LCD_write_command(0x01);
 c58:	81 e0       	ldi	r24, 0x01	; 1
 c5a:	0e 94 90 06 	call	0xd20	; 0xd20 <LCD_write_command>
	
	LCD_clear();
 c5e:	0e 94 d4 06 	call	0xda8	; 0xda8 <LCD_clear>
 c62:	08 95       	ret

Disassembly of section .text.LCD_write_data:

00000d44 <LCD_write_data>:
}

void LCD_write_data(unsigned char byte) {
 d44:	cf 93       	push	r28
 d46:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
 d48:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
 d4a:	85 b3       	in	r24, 0x15	; 21
 d4c:	84 60       	ori	r24, 0x04	; 4
 d4e:	85 bb       	out	0x15, r24	; 21
	LCD_strobe_lcd_e();
 d50:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>

	// Second nibble
	PORTC = (byte<<4);
 d54:	c2 95       	swap	r28
 d56:	c0 7f       	andi	r28, 0xF0	; 240
 d58:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
 d5a:	85 b3       	in	r24, 0x15	; 21
 d5c:	84 60       	ori	r24, 0x04	; 4
 d5e:	85 bb       	out	0x15, r24	; 21
	LCD_strobe_lcd_e();
 d60:	0e 94 7d 06 	call	0xcfa	; 0xcfa <LCD_strobe_lcd_e>
}
 d64:	cf 91       	pop	r28
 d66:	08 95       	ret

Disassembly of section .text.LCD_display_text:

00000dc2 <LCD_display_text>:

void LCD_display_text(char *str) {
 dc2:	cf 93       	push	r28
 dc4:	df 93       	push	r29
 dc6:	ec 01       	movw	r28, r24
	while(*str) {
 dc8:	03 c0       	rjmp	.+6      	; 0xdd0 <LCD_display_text+0xe>
		LCD_write_data(*str++);
 dca:	21 96       	adiw	r28, 0x01	; 1
 dcc:	0e 94 a2 06 	call	0xd44	; 0xd44 <LCD_write_data>
	PORTC |= (1<<LCD_RS);
	LCD_strobe_lcd_e();
}

void LCD_display_text(char *str) {
	while(*str) {
 dd0:	88 81       	ld	r24, Y
 dd2:	81 11       	cpse	r24, r1
 dd4:	fa cf       	rjmp	.-12     	; 0xdca <LCD_display_text+0x8>
		LCD_write_data(*str++);
	}
}
 dd6:	df 91       	pop	r29
 dd8:	cf 91       	pop	r28
 dda:	08 95       	ret

Disassembly of section .text.LCD_set_cursor:

00000ec8 <LCD_set_cursor>:

void LCD_set_cursor(int position) {
	unsigned char cursor = (position | (1<<7));
	LCD_write_command(cursor);
 ec8:	80 68       	ori	r24, 0x80	; 128
 eca:	0e 94 90 06 	call	0xd20	; 0xd20 <LCD_write_command>
 ece:	08 95       	ret

Disassembly of section .text.display_distance_on_lcd:

00000954 <display_distance_on_lcd>:
#define BIT(x)			(1 << (x))

double distance;
const char *noteToPlay;

void display_distance_on_lcd() {
 954:	ef 92       	push	r14
 956:	ff 92       	push	r15
 958:	0f 93       	push	r16
 95a:	1f 93       	push	r17
 95c:	cf 93       	push	r28
 95e:	df 93       	push	r29
 960:	cd b7       	in	r28, 0x3d	; 61
 962:	de b7       	in	r29, 0x3e	; 62
 964:	2a 97       	sbiw	r28, 0x0a	; 10
 966:	0f b6       	in	r0, 0x3f	; 63
 968:	f8 94       	cli
 96a:	de bf       	out	0x3e, r29	; 62
 96c:	0f be       	out	0x3f, r0	; 63
 96e:	cd bf       	out	0x3d, r28	; 61
	char string[10];
	dtostrf(distance, 2, 2, string);/* distance to string */
 970:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <distance>
 974:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <distance+0x1>
 978:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <distance+0x2>
 97c:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <distance+0x3>
 980:	9e 01       	movw	r18, r28
 982:	2f 5f       	subi	r18, 0xFF	; 255
 984:	3f 4f       	sbci	r19, 0xFF	; 255
 986:	79 01       	movw	r14, r18
 988:	89 01       	movw	r16, r18
 98a:	22 e0       	ldi	r18, 0x02	; 2
 98c:	42 e0       	ldi	r20, 0x02	; 2
 98e:	0e 94 f7 05 	call	0xbee	; 0xbee <dtostrf>
	
	strcat(string, " cm ");	/* Concat unit i.e.cm */
 992:	f7 01       	movw	r30, r14
 994:	01 90       	ld	r0, Z+
 996:	00 20       	and	r0, r0
 998:	e9 f7       	brne	.-6      	; 0x994 <display_distance_on_lcd+0x40>
 99a:	cf 01       	movw	r24, r30
 99c:	25 e0       	ldi	r18, 0x05	; 5
 99e:	30 e0       	ldi	r19, 0x00	; 0
 9a0:	47 e2       	ldi	r20, 0x27	; 39
 9a2:	52 e0       	ldi	r21, 0x02	; 2
 9a4:	60 e0       	ldi	r22, 0x00	; 0
 9a6:	01 97       	sbiw	r24, 0x01	; 1
 9a8:	0e 94 4d 06 	call	0xc9a	; 0xc9a <memcpy>
	LCD_clear();
 9ac:	0e 94 d4 06 	call	0xda8	; 0xda8 <LCD_clear>
	LCD_display_text(string);
 9b0:	c7 01       	movw	r24, r14
 9b2:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <LCD_display_text>
	strcpy(string, "note: ");
 9b6:	27 e0       	ldi	r18, 0x07	; 7
 9b8:	30 e0       	ldi	r19, 0x00	; 0
 9ba:	4c e2       	ldi	r20, 0x2C	; 44
 9bc:	52 e0       	ldi	r21, 0x02	; 2
 9be:	60 e0       	ldi	r22, 0x00	; 0
 9c0:	c7 01       	movw	r24, r14
 9c2:	0e 94 4d 06 	call	0xc9a	; 0xc9a <memcpy>
	strcat(string, noteToPlay);
 9c6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 9ca:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 9ce:	60 91 02 01 	lds	r22, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 9d2:	c7 01       	movw	r24, r14
 9d4:	0e 94 66 06 	call	0xccc	; 0xccc <strcat>
	LCD_set_cursor(40);
 9d8:	88 e2       	ldi	r24, 0x28	; 40
 9da:	90 e0       	ldi	r25, 0x00	; 0
 9dc:	0e 94 64 07 	call	0xec8	; 0xec8 <LCD_set_cursor>
	LCD_display_text(string);
 9e0:	c7 01       	movw	r24, r14
 9e2:	0e 94 e1 06 	call	0xdc2	; 0xdc2 <LCD_display_text>
}
 9e6:	2a 96       	adiw	r28, 0x0a	; 10
 9e8:	0f b6       	in	r0, 0x3f	; 63
 9ea:	f8 94       	cli
 9ec:	de bf       	out	0x3e, r29	; 62
 9ee:	0f be       	out	0x3f, r0	; 63
 9f0:	cd bf       	out	0x3d, r28	; 61
 9f2:	df 91       	pop	r29
 9f4:	cf 91       	pop	r28
 9f6:	1f 91       	pop	r17
 9f8:	0f 91       	pop	r16
 9fa:	ff 90       	pop	r15
 9fc:	ef 90       	pop	r14
 9fe:	08 95       	ret

Disassembly of section .text.main:

00000c64 <main>:

int main(void)
{
	LCD_init();
 c64:	0e 94 17 06 	call	0xc2e	; 0xc2e <LCD_init>
	US_init();
 c68:	0e 94 56 07 	call	0xeac	; 0xeac <US_init>
	BUZZER_init();
 c6c:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <BUZZER_init>

	while(1)
	{
		
		US_trigger();
 c70:	0e 94 11 07 	call	0xe22	; 0xe22 <US_trigger>
		COMMON_wait(250);
 c74:	8a ef       	ldi	r24, 0xFA	; 250
 c76:	90 e0       	ldi	r25, 0x00	; 0
 c78:	0e 94 c5 06 	call	0xd8a	; 0xd8a <COMMON_wait>
		display_distance_on_lcd();
 c7c:	0e 94 aa 04 	call	0x954	; 0x954 <display_distance_on_lcd>
		BUZZER_change_frequency(AUDIO_MATH_get_musical_value(distance));
 c80:	60 91 1d 01 	lds	r22, 0x011D	; 0x80011d <distance>
 c84:	70 91 1e 01 	lds	r23, 0x011E	; 0x80011e <distance+0x1>
 c88:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <distance+0x2>
 c8c:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <distance+0x3>
 c90:	0e 94 69 03 	call	0x6d2	; 0x6d2 <AUDIO_MATH_get_musical_value>
 c94:	0e 94 60 07 	call	0xec0	; 0xec0 <BUZZER_change_frequency>
 c98:	eb cf       	rjmp	.-42     	; 0xc70 <main+0xc>

Disassembly of section .text.__vector_10:

00000e0c <__vector_10>:
double distance = 0; //extern



//This intterupt triggers after an overflow
ISR(TIMER2_OVF_vect) {
 e0c:	1f 92       	push	r1
 e0e:	0f 92       	push	r0
 e10:	0f b6       	in	r0, 0x3f	; 63
 e12:	0f 92       	push	r0
 e14:	11 24       	eor	r1, r1
	TCNT2 = 0; // reset the timer after an overflow
 e16:	14 bc       	out	0x24, r1	; 36
}
 e18:	0f 90       	pop	r0
 e1a:	0f be       	out	0x3f, r0	; 63
 e1c:	0f 90       	pop	r0
 e1e:	1f 90       	pop	r1
 e20:	18 95       	reti

Disassembly of section .text.__vector_8:

00000a00 <__vector_8>:

ISR ( INT7_vect ) {
 a00:	1f 92       	push	r1
 a02:	0f 92       	push	r0
 a04:	0f b6       	in	r0, 0x3f	; 63
 a06:	0f 92       	push	r0
 a08:	11 24       	eor	r1, r1
 a0a:	0b b6       	in	r0, 0x3b	; 59
 a0c:	0f 92       	push	r0
 a0e:	2f 93       	push	r18
 a10:	3f 93       	push	r19
 a12:	4f 93       	push	r20
 a14:	5f 93       	push	r21
 a16:	6f 93       	push	r22
 a18:	7f 93       	push	r23
 a1a:	8f 93       	push	r24
 a1c:	9f 93       	push	r25
 a1e:	af 93       	push	r26
 a20:	bf 93       	push	r27
 a22:	ef 93       	push	r30
 a24:	ff 93       	push	r31
	// 
	if(PINE & (1 << ECHO_PIN)) {
 a26:	0f 9b       	sbis	0x01, 7	; 1
 a28:	04 c0       	rjmp	.+8      	; 0xa32 <__vector_8+0x32>
		ticksOnTrigger = TCNT2; //get the amount of ticks at the start of the echo
 a2a:	84 b5       	in	r24, 0x24	; 36
 a2c:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <ticksOnTrigger>
 a30:	19 c0       	rjmp	.+50     	; 0xa64 <__vector_8+0x64>
	} else {
		unsigned char diff = TCNT2 - ticksOnTrigger;        // Getting the difference from timer and start
 a32:	64 b5       	in	r22, 0x24	; 36
 a34:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <ticksOnTrigger>
 a38:	68 1b       	sub	r22, r24
		distance = ( diff * ( 32.0 / TICK_CM ) );    // distance calculation
 a3a:	70 e0       	ldi	r23, 0x00	; 0
 a3c:	80 e0       	ldi	r24, 0x00	; 0
 a3e:	90 e0       	ldi	r25, 0x00	; 0
 a40:	0e 94 47 05 	call	0xa8e	; 0xa8e <__floatsisf>
 a44:	2b ec       	ldi	r18, 0xCB	; 203
 a46:	3d e3       	ldi	r19, 0x3D	; 61
 a48:	4d e0       	ldi	r20, 0x0D	; 13
 a4a:	5f e3       	ldi	r21, 0x3F	; 63
 a4c:	0e 94 68 07 	call	0xed0	; 0xed0 <__mulsf3>
 a50:	60 93 1d 01 	sts	0x011D, r22	; 0x80011d <distance>
 a54:	70 93 1e 01 	sts	0x011E, r23	; 0x80011e <distance+0x1>
 a58:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <distance+0x2>
 a5c:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <distance+0x3>
		ticksOnTrigger = 0; // resetting the ticks since calculation echo was detected
 a60:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <ticksOnTrigger>
	}
}
 a64:	ff 91       	pop	r31
 a66:	ef 91       	pop	r30
 a68:	bf 91       	pop	r27
 a6a:	af 91       	pop	r26
 a6c:	9f 91       	pop	r25
 a6e:	8f 91       	pop	r24
 a70:	7f 91       	pop	r23
 a72:	6f 91       	pop	r22
 a74:	5f 91       	pop	r21
 a76:	4f 91       	pop	r20
 a78:	3f 91       	pop	r19
 a7a:	2f 91       	pop	r18
 a7c:	0f 90       	pop	r0
 a7e:	0b be       	out	0x3b, r0	; 59
 a80:	0f 90       	pop	r0
 a82:	0f be       	out	0x3f, r0	; 63
 a84:	0f 90       	pop	r0
 a86:	1f 90       	pop	r1
 a88:	18 95       	reti

Disassembly of section .text.US_init_pins:

00000ddc <US_init_pins>:

void US_init_pins() {
	EICRB |= 0x40;			// any logical change on INT7 generates an interrupt request
 ddc:	8a b7       	in	r24, 0x3a	; 58
 dde:	80 64       	ori	r24, 0x40	; 64
 de0:	8a bf       	out	0x3a, r24	; 58
	EIMSK |= 0x80;			// Enable INT7
 de2:	89 b7       	in	r24, 0x39	; 57
 de4:	80 68       	ori	r24, 0x80	; 128
 de6:	89 bf       	out	0x39, r24	; 57
	
	DDRE |= (1 << TRIGGER_PIN); // PORTE TRIGGER_PIN to output
 de8:	82 b1       	in	r24, 0x02	; 2
 dea:	81 60       	ori	r24, 0x01	; 1
 dec:	82 b9       	out	0x02, r24	; 2
	DDRE &= ~(1 << ECHO_PIN); // PORTE ECHO_PIN to input
 dee:	82 b1       	in	r24, 0x02	; 2
 df0:	8f 77       	andi	r24, 0x7F	; 127
 df2:	82 b9       	out	0x02, r24	; 2
 df4:	08 95       	ret

Disassembly of section .text.timer_init:

00000e4a <timer_init>:
}

void timer_init() {
	TCNT2 = 0;	// Clear Timer counter 
 e4a:	14 bc       	out	0x24, r1	; 36
	TIMSK |= 0b01000000; // Enables overflow interrupt for timer 2.
 e4c:	87 b7       	in	r24, 0x37	; 55
 e4e:	80 64       	ori	r24, 0x40	; 64
 e50:	87 bf       	out	0x37, r24	; 55
	TCCR2 = 0b00001100; // Timer mode of operation: pwm phase correct, prescaler: 256
 e52:	8c e0       	ldi	r24, 0x0C	; 12
 e54:	85 bd       	out	0x25, r24	; 37
	sei();			// Enable global interrupt 
 e56:	78 94       	sei
 e58:	08 95       	ret

Disassembly of section .text.US_trigger:

00000e22 <US_trigger>:
}


void US_trigger() {
	/* Give 10us trigger pulse on trig. pin to HC-SR04 */
	PORTE |= (1 << TRIGGER_PIN);
 e22:	83 b1       	in	r24, 0x03	; 3
 e24:	81 60       	ori	r24, 0x01	; 1
 e26:	83 b9       	out	0x03, r24	; 3
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 e28:	8a e1       	ldi	r24, 0x1A	; 26
 e2a:	8a 95       	dec	r24
 e2c:	f1 f7       	brne	.-4      	; 0xe2a <US_trigger+0x8>
 e2e:	00 c0       	rjmp	.+0      	; 0xe30 <US_trigger+0xe>
	_delay_us(10);
	PORTE &= ~(1 << TRIGGER_PIN);
 e30:	83 b1       	in	r24, 0x03	; 3
 e32:	8e 7f       	andi	r24, 0xFE	; 254
 e34:	83 b9       	out	0x03, r24	; 3
 e36:	08 95       	ret

Disassembly of section .text.US_init:

00000eac <US_init>:
}

//initialize the ultrasonic sensor
void US_init() {
	timer_init();
 eac:	0e 94 25 07 	call	0xe4a	; 0xe4a <timer_init>
	US_init_pins();
 eb0:	0e 94 ee 06 	call	0xddc	; 0xddc <US_init_pins>
 eb4:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e5a <__fixsfsi>:
 e5a:	0e 94 82 05 	call	0xb04	; 0xb04 <__fixunssfsi>
 e5e:	68 94       	set
 e60:	b1 11       	cpse	r27, r1
 e62:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__fp_szero>
 e66:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000b04 <__fixunssfsi>:
 b04:	0e 94 dd 05 	call	0xbba	; 0xbba <__fp_splitA>
 b08:	88 f0       	brcs	.+34     	; 0xb2c <__fixunssfsi+0x28>
 b0a:	9f 57       	subi	r25, 0x7F	; 127
 b0c:	98 f0       	brcs	.+38     	; 0xb34 <__fixunssfsi+0x30>
 b0e:	b9 2f       	mov	r27, r25
 b10:	99 27       	eor	r25, r25
 b12:	b7 51       	subi	r27, 0x17	; 23
 b14:	b0 f0       	brcs	.+44     	; 0xb42 <__fixunssfsi+0x3e>
 b16:	e1 f0       	breq	.+56     	; 0xb50 <__fixunssfsi+0x4c>
 b18:	66 0f       	add	r22, r22
 b1a:	77 1f       	adc	r23, r23
 b1c:	88 1f       	adc	r24, r24
 b1e:	99 1f       	adc	r25, r25
 b20:	1a f0       	brmi	.+6      	; 0xb28 <__fixunssfsi+0x24>
 b22:	ba 95       	dec	r27
 b24:	c9 f7       	brne	.-14     	; 0xb18 <__fixunssfsi+0x14>
 b26:	14 c0       	rjmp	.+40     	; 0xb50 <__fixunssfsi+0x4c>
 b28:	b1 30       	cpi	r27, 0x01	; 1
 b2a:	91 f0       	breq	.+36     	; 0xb50 <__fixunssfsi+0x4c>
 b2c:	0e 94 34 07 	call	0xe68	; 0xe68 <__fp_zero>
 b30:	b1 e0       	ldi	r27, 0x01	; 1
 b32:	08 95       	ret
 b34:	0c 94 34 07 	jmp	0xe68	; 0xe68 <__fp_zero>
 b38:	67 2f       	mov	r22, r23
 b3a:	78 2f       	mov	r23, r24
 b3c:	88 27       	eor	r24, r24
 b3e:	b8 5f       	subi	r27, 0xF8	; 248
 b40:	39 f0       	breq	.+14     	; 0xb50 <__fixunssfsi+0x4c>
 b42:	b9 3f       	cpi	r27, 0xF9	; 249
 b44:	cc f3       	brlt	.-14     	; 0xb38 <__fixunssfsi+0x34>
 b46:	86 95       	lsr	r24
 b48:	77 95       	ror	r23
 b4a:	67 95       	ror	r22
 b4c:	b3 95       	inc	r27
 b4e:	d9 f7       	brne	.-10     	; 0xb46 <__fixunssfsi+0x42>
 b50:	3e f4       	brtc	.+14     	; 0xb60 <__fixunssfsi+0x5c>
 b52:	90 95       	com	r25
 b54:	80 95       	com	r24
 b56:	70 95       	com	r23
 b58:	61 95       	neg	r22
 b5a:	7f 4f       	sbci	r23, 0xFF	; 255
 b5c:	8f 4f       	sbci	r24, 0xFF	; 255
 b5e:	9f 4f       	sbci	r25, 0xFF	; 255
 b60:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000a8a <__floatunsisf>:
 a8a:	e8 94       	clt
 a8c:	09 c0       	rjmp	.+18     	; 0xaa0 <__floatsisf+0x12>

00000a8e <__floatsisf>:
 a8e:	97 fb       	bst	r25, 7
 a90:	3e f4       	brtc	.+14     	; 0xaa0 <__floatsisf+0x12>
 a92:	90 95       	com	r25
 a94:	80 95       	com	r24
 a96:	70 95       	com	r23
 a98:	61 95       	neg	r22
 a9a:	7f 4f       	sbci	r23, 0xFF	; 255
 a9c:	8f 4f       	sbci	r24, 0xFF	; 255
 a9e:	9f 4f       	sbci	r25, 0xFF	; 255
 aa0:	99 23       	and	r25, r25
 aa2:	a9 f0       	breq	.+42     	; 0xace <__floatsisf+0x40>
 aa4:	f9 2f       	mov	r31, r25
 aa6:	96 e9       	ldi	r25, 0x96	; 150
 aa8:	bb 27       	eor	r27, r27
 aaa:	93 95       	inc	r25
 aac:	f6 95       	lsr	r31
 aae:	87 95       	ror	r24
 ab0:	77 95       	ror	r23
 ab2:	67 95       	ror	r22
 ab4:	b7 95       	ror	r27
 ab6:	f1 11       	cpse	r31, r1
 ab8:	f8 cf       	rjmp	.-16     	; 0xaaa <__floatsisf+0x1c>
 aba:	fa f4       	brpl	.+62     	; 0xafa <__floatsisf+0x6c>
 abc:	bb 0f       	add	r27, r27
 abe:	11 f4       	brne	.+4      	; 0xac4 <__floatsisf+0x36>
 ac0:	60 ff       	sbrs	r22, 0
 ac2:	1b c0       	rjmp	.+54     	; 0xafa <__floatsisf+0x6c>
 ac4:	6f 5f       	subi	r22, 0xFF	; 255
 ac6:	7f 4f       	sbci	r23, 0xFF	; 255
 ac8:	8f 4f       	sbci	r24, 0xFF	; 255
 aca:	9f 4f       	sbci	r25, 0xFF	; 255
 acc:	16 c0       	rjmp	.+44     	; 0xafa <__floatsisf+0x6c>
 ace:	88 23       	and	r24, r24
 ad0:	11 f0       	breq	.+4      	; 0xad6 <__floatsisf+0x48>
 ad2:	96 e9       	ldi	r25, 0x96	; 150
 ad4:	11 c0       	rjmp	.+34     	; 0xaf8 <__floatsisf+0x6a>
 ad6:	77 23       	and	r23, r23
 ad8:	21 f0       	breq	.+8      	; 0xae2 <__floatsisf+0x54>
 ada:	9e e8       	ldi	r25, 0x8E	; 142
 adc:	87 2f       	mov	r24, r23
 ade:	76 2f       	mov	r23, r22
 ae0:	05 c0       	rjmp	.+10     	; 0xaec <__floatsisf+0x5e>
 ae2:	66 23       	and	r22, r22
 ae4:	71 f0       	breq	.+28     	; 0xb02 <__floatsisf+0x74>
 ae6:	96 e8       	ldi	r25, 0x86	; 134
 ae8:	86 2f       	mov	r24, r22
 aea:	70 e0       	ldi	r23, 0x00	; 0
 aec:	60 e0       	ldi	r22, 0x00	; 0
 aee:	2a f0       	brmi	.+10     	; 0xafa <__floatsisf+0x6c>
 af0:	9a 95       	dec	r25
 af2:	66 0f       	add	r22, r22
 af4:	77 1f       	adc	r23, r23
 af6:	88 1f       	adc	r24, r24
 af8:	da f7       	brpl	.-10     	; 0xaf0 <__floatsisf+0x62>
 afa:	88 0f       	add	r24, r24
 afc:	96 95       	lsr	r25
 afe:	87 95       	ror	r24
 b00:	97 f9       	bld	r25, 7
 b02:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000baa <__fp_split3>:
 baa:	57 fd       	sbrc	r21, 7
 bac:	90 58       	subi	r25, 0x80	; 128
 bae:	44 0f       	add	r20, r20
 bb0:	55 1f       	adc	r21, r21
 bb2:	59 f0       	breq	.+22     	; 0xbca <__fp_splitA+0x10>
 bb4:	5f 3f       	cpi	r21, 0xFF	; 255
 bb6:	71 f0       	breq	.+28     	; 0xbd4 <__fp_splitA+0x1a>
 bb8:	47 95       	ror	r20

00000bba <__fp_splitA>:
 bba:	88 0f       	add	r24, r24
 bbc:	97 fb       	bst	r25, 7
 bbe:	99 1f       	adc	r25, r25
 bc0:	61 f0       	breq	.+24     	; 0xbda <__fp_splitA+0x20>
 bc2:	9f 3f       	cpi	r25, 0xFF	; 255
 bc4:	79 f0       	breq	.+30     	; 0xbe4 <__fp_splitA+0x2a>
 bc6:	87 95       	ror	r24
 bc8:	08 95       	ret
 bca:	12 16       	cp	r1, r18
 bcc:	13 06       	cpc	r1, r19
 bce:	14 06       	cpc	r1, r20
 bd0:	55 1f       	adc	r21, r21
 bd2:	f2 cf       	rjmp	.-28     	; 0xbb8 <__fp_split3+0xe>
 bd4:	46 95       	lsr	r20
 bd6:	f1 df       	rcall	.-30     	; 0xbba <__fp_splitA>
 bd8:	08 c0       	rjmp	.+16     	; 0xbea <__fp_splitA+0x30>
 bda:	16 16       	cp	r1, r22
 bdc:	17 06       	cpc	r1, r23
 bde:	18 06       	cpc	r1, r24
 be0:	99 1f       	adc	r25, r25
 be2:	f1 cf       	rjmp	.-30     	; 0xbc6 <__fp_splitA+0xc>
 be4:	86 95       	lsr	r24
 be6:	71 05       	cpc	r23, r1
 be8:	61 05       	cpc	r22, r1
 bea:	08 94       	sec
 bec:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e68 <__fp_zero>:
 e68:	e8 94       	clt

00000e6a <__fp_szero>:
 e6a:	bb 27       	eor	r27, r27
 e6c:	66 27       	eor	r22, r22
 e6e:	77 27       	eor	r23, r23
 e70:	cb 01       	movw	r24, r22
 e72:	97 f9       	bld	r25, 7
 e74:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000eb6 <__gesf2>:
 eb6:	0e 94 b1 05 	call	0xb62	; 0xb62 <__fp_cmp>
 eba:	08 f4       	brcc	.+2      	; 0xebe <__gesf2+0x8>
 ebc:	8f ef       	ldi	r24, 0xFF	; 255
 ebe:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000ed0 <__mulsf3>:
 ed0:	0e 94 40 04 	call	0x880	; 0x880 <__mulsf3x>
 ed4:	0c 94 b4 06 	jmp	0xd68	; 0xd68 <__fp_round>

Disassembly of section .text.avrlibc.fplib:

00000880 <__mulsf3x>:
 880:	0f c0       	rjmp	.+30     	; 0x8a0 <__mulsf3x+0x20>
 882:	0e 94 3b 07 	call	0xe76	; 0xe76 <__fp_pscA>
 886:	38 f0       	brcs	.+14     	; 0x896 <__mulsf3x+0x16>
 888:	0e 94 42 07 	call	0xe84	; 0xe84 <__fp_pscB>
 88c:	20 f0       	brcs	.+8      	; 0x896 <__mulsf3x+0x16>
 88e:	95 23       	and	r25, r21
 890:	11 f0       	breq	.+4      	; 0x896 <__mulsf3x+0x16>
 892:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_inf>
 896:	0c 94 6c 07 	jmp	0xed8	; 0xed8 <__fp_nan>
 89a:	11 24       	eor	r1, r1
 89c:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__fp_szero>
 8a0:	0e 94 d5 05 	call	0xbaa	; 0xbaa <__fp_split3>
 8a4:	70 f3       	brcs	.-36     	; 0x882 <__mulsf3x+0x2>

000008a6 <__mulsf3_pse>:
 8a6:	95 9f       	mul	r25, r21
 8a8:	c1 f3       	breq	.-16     	; 0x89a <__mulsf3x+0x1a>
 8aa:	95 0f       	add	r25, r21
 8ac:	50 e0       	ldi	r21, 0x00	; 0
 8ae:	55 1f       	adc	r21, r21
 8b0:	62 9f       	mul	r22, r18
 8b2:	f0 01       	movw	r30, r0
 8b4:	72 9f       	mul	r23, r18
 8b6:	bb 27       	eor	r27, r27
 8b8:	f0 0d       	add	r31, r0
 8ba:	b1 1d       	adc	r27, r1
 8bc:	63 9f       	mul	r22, r19
 8be:	aa 27       	eor	r26, r26
 8c0:	f0 0d       	add	r31, r0
 8c2:	b1 1d       	adc	r27, r1
 8c4:	aa 1f       	adc	r26, r26
 8c6:	64 9f       	mul	r22, r20
 8c8:	66 27       	eor	r22, r22
 8ca:	b0 0d       	add	r27, r0
 8cc:	a1 1d       	adc	r26, r1
 8ce:	66 1f       	adc	r22, r22
 8d0:	82 9f       	mul	r24, r18
 8d2:	22 27       	eor	r18, r18
 8d4:	b0 0d       	add	r27, r0
 8d6:	a1 1d       	adc	r26, r1
 8d8:	62 1f       	adc	r22, r18
 8da:	73 9f       	mul	r23, r19
 8dc:	b0 0d       	add	r27, r0
 8de:	a1 1d       	adc	r26, r1
 8e0:	62 1f       	adc	r22, r18
 8e2:	83 9f       	mul	r24, r19
 8e4:	a0 0d       	add	r26, r0
 8e6:	61 1d       	adc	r22, r1
 8e8:	22 1f       	adc	r18, r18
 8ea:	74 9f       	mul	r23, r20
 8ec:	33 27       	eor	r19, r19
 8ee:	a0 0d       	add	r26, r0
 8f0:	61 1d       	adc	r22, r1
 8f2:	23 1f       	adc	r18, r19
 8f4:	84 9f       	mul	r24, r20
 8f6:	60 0d       	add	r22, r0
 8f8:	21 1d       	adc	r18, r1
 8fa:	82 2f       	mov	r24, r18
 8fc:	76 2f       	mov	r23, r22
 8fe:	6a 2f       	mov	r22, r26
 900:	11 24       	eor	r1, r1
 902:	9f 57       	subi	r25, 0x7F	; 127
 904:	50 40       	sbci	r21, 0x00	; 0
 906:	9a f0       	brmi	.+38     	; 0x92e <__mulsf3_pse+0x88>
 908:	f1 f0       	breq	.+60     	; 0x946 <__mulsf3_pse+0xa0>
 90a:	88 23       	and	r24, r24
 90c:	4a f0       	brmi	.+18     	; 0x920 <__mulsf3_pse+0x7a>
 90e:	ee 0f       	add	r30, r30
 910:	ff 1f       	adc	r31, r31
 912:	bb 1f       	adc	r27, r27
 914:	66 1f       	adc	r22, r22
 916:	77 1f       	adc	r23, r23
 918:	88 1f       	adc	r24, r24
 91a:	91 50       	subi	r25, 0x01	; 1
 91c:	50 40       	sbci	r21, 0x00	; 0
 91e:	a9 f7       	brne	.-22     	; 0x90a <__mulsf3_pse+0x64>
 920:	9e 3f       	cpi	r25, 0xFE	; 254
 922:	51 05       	cpc	r21, r1
 924:	80 f0       	brcs	.+32     	; 0x946 <__mulsf3_pse+0xa0>
 926:	0c 94 50 07 	jmp	0xea0	; 0xea0 <__fp_inf>
 92a:	0c 94 35 07 	jmp	0xe6a	; 0xe6a <__fp_szero>
 92e:	5f 3f       	cpi	r21, 0xFF	; 255
 930:	e4 f3       	brlt	.-8      	; 0x92a <__mulsf3_pse+0x84>
 932:	98 3e       	cpi	r25, 0xE8	; 232
 934:	d4 f3       	brlt	.-12     	; 0x92a <__mulsf3_pse+0x84>
 936:	86 95       	lsr	r24
 938:	77 95       	ror	r23
 93a:	67 95       	ror	r22
 93c:	b7 95       	ror	r27
 93e:	f7 95       	ror	r31
 940:	e7 95       	ror	r30
 942:	9f 5f       	subi	r25, 0xFF	; 255
 944:	c1 f7       	brne	.-16     	; 0x936 <__mulsf3_pse+0x90>
 946:	fe 2b       	or	r31, r30
 948:	88 0f       	add	r24, r24
 94a:	91 1d       	adc	r25, r1
 94c:	96 95       	lsr	r25
 94e:	87 95       	ror	r24
 950:	97 f9       	bld	r25, 7
 952:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000b62 <__fp_cmp>:
 b62:	99 0f       	add	r25, r25
 b64:	00 08       	sbc	r0, r0
 b66:	55 0f       	add	r21, r21
 b68:	aa 0b       	sbc	r26, r26
 b6a:	e0 e8       	ldi	r30, 0x80	; 128
 b6c:	fe ef       	ldi	r31, 0xFE	; 254
 b6e:	16 16       	cp	r1, r22
 b70:	17 06       	cpc	r1, r23
 b72:	e8 07       	cpc	r30, r24
 b74:	f9 07       	cpc	r31, r25
 b76:	c0 f0       	brcs	.+48     	; 0xba8 <__fp_cmp+0x46>
 b78:	12 16       	cp	r1, r18
 b7a:	13 06       	cpc	r1, r19
 b7c:	e4 07       	cpc	r30, r20
 b7e:	f5 07       	cpc	r31, r21
 b80:	98 f0       	brcs	.+38     	; 0xba8 <__fp_cmp+0x46>
 b82:	62 1b       	sub	r22, r18
 b84:	73 0b       	sbc	r23, r19
 b86:	84 0b       	sbc	r24, r20
 b88:	95 0b       	sbc	r25, r21
 b8a:	39 f4       	brne	.+14     	; 0xb9a <__fp_cmp+0x38>
 b8c:	0a 26       	eor	r0, r26
 b8e:	61 f0       	breq	.+24     	; 0xba8 <__fp_cmp+0x46>
 b90:	23 2b       	or	r18, r19
 b92:	24 2b       	or	r18, r20
 b94:	25 2b       	or	r18, r21
 b96:	21 f4       	brne	.+8      	; 0xba0 <__fp_cmp+0x3e>
 b98:	08 95       	ret
 b9a:	0a 26       	eor	r0, r26
 b9c:	09 f4       	brne	.+2      	; 0xba0 <__fp_cmp+0x3e>
 b9e:	a1 40       	sbci	r26, 0x01	; 1
 ba0:	a6 95       	lsr	r26
 ba2:	8f ef       	ldi	r24, 0xFF	; 255
 ba4:	81 1d       	adc	r24, r1
 ba6:	81 1d       	adc	r24, r1
 ba8:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000ea0 <__fp_inf>:
 ea0:	97 f9       	bld	r25, 7
 ea2:	9f 67       	ori	r25, 0x7F	; 127
 ea4:	80 e8       	ldi	r24, 0x80	; 128
 ea6:	70 e0       	ldi	r23, 0x00	; 0
 ea8:	60 e0       	ldi	r22, 0x00	; 0
 eaa:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000ed8 <__fp_nan>:
 ed8:	9f ef       	ldi	r25, 0xFF	; 255
 eda:	80 ec       	ldi	r24, 0xC0	; 192
 edc:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e76 <__fp_pscA>:
 e76:	00 24       	eor	r0, r0
 e78:	0a 94       	dec	r0
 e7a:	16 16       	cp	r1, r22
 e7c:	17 06       	cpc	r1, r23
 e7e:	18 06       	cpc	r1, r24
 e80:	09 06       	cpc	r0, r25
 e82:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000e84 <__fp_pscB>:
 e84:	00 24       	eor	r0, r0
 e86:	0a 94       	dec	r0
 e88:	12 16       	cp	r1, r18
 e8a:	13 06       	cpc	r1, r19
 e8c:	14 06       	cpc	r1, r20
 e8e:	05 06       	cpc	r0, r21
 e90:	08 95       	ret

Disassembly of section .text.avrlibc.fplib:

00000d68 <__fp_round>:
 d68:	09 2e       	mov	r0, r25
 d6a:	03 94       	inc	r0
 d6c:	00 0c       	add	r0, r0
 d6e:	11 f4       	brne	.+4      	; 0xd74 <__fp_round+0xc>
 d70:	88 23       	and	r24, r24
 d72:	52 f0       	brmi	.+20     	; 0xd88 <__fp_round+0x20>
 d74:	bb 0f       	add	r27, r27
 d76:	40 f4       	brcc	.+16     	; 0xd88 <__fp_round+0x20>
 d78:	bf 2b       	or	r27, r31
 d7a:	11 f4       	brne	.+4      	; 0xd80 <__fp_round+0x18>
 d7c:	60 ff       	sbrs	r22, 0
 d7e:	04 c0       	rjmp	.+8      	; 0xd88 <__fp_round+0x20>
 d80:	6f 5f       	subi	r22, 0xFF	; 255
 d82:	7f 4f       	sbci	r23, 0xFF	; 255
 d84:	8f 4f       	sbci	r24, 0xFF	; 255
 d86:	9f 4f       	sbci	r25, 0xFF	; 255
 d88:	08 95       	ret

Disassembly of section .text.libgcc:

00000e38 <__tablejump2__>:
 e38:	ee 0f       	add	r30, r30
 e3a:	ff 1f       	adc	r31, r31
 e3c:	00 24       	eor	r0, r0
 e3e:	00 1c       	adc	r0, r0
 e40:	0b be       	out	0x3b, r0	; 59
 e42:	07 90       	elpm	r0, Z+
 e44:	f6 91       	elpm	r31, Z
 e46:	e0 2d       	mov	r30, r0
 e48:	09 94       	ijmp

Disassembly of section .text.avrlibc:

00000bee <dtostrf>:
 bee:	ef 92       	push	r14
 bf0:	0f 93       	push	r16
 bf2:	1f 93       	push	r17
 bf4:	cf 93       	push	r28
 bf6:	df 93       	push	r29
 bf8:	e8 01       	movw	r28, r16
 bfa:	47 fd       	sbrc	r20, 7
 bfc:	02 c0       	rjmp	.+4      	; 0xc02 <dtostrf+0x14>
 bfe:	34 e0       	ldi	r19, 0x04	; 4
 c00:	01 c0       	rjmp	.+2      	; 0xc04 <dtostrf+0x16>
 c02:	34 e1       	ldi	r19, 0x14	; 20
 c04:	04 2e       	mov	r0, r20
 c06:	00 0c       	add	r0, r0
 c08:	55 0b       	sbc	r21, r21
 c0a:	57 ff       	sbrs	r21, 7
 c0c:	03 c0       	rjmp	.+6      	; 0xc14 <dtostrf+0x26>
 c0e:	51 95       	neg	r21
 c10:	41 95       	neg	r20
 c12:	51 09       	sbc	r21, r1
 c14:	e3 2e       	mov	r14, r19
 c16:	02 2f       	mov	r16, r18
 c18:	24 2f       	mov	r18, r20
 c1a:	ae 01       	movw	r20, r28
 c1c:	0e 94 1a 01 	call	0x234	; 0x234 <dtoa_prf>
 c20:	ce 01       	movw	r24, r28
 c22:	df 91       	pop	r29
 c24:	cf 91       	pop	r28
 c26:	1f 91       	pop	r17
 c28:	0f 91       	pop	r16
 c2a:	ef 90       	pop	r14
 c2c:	08 95       	ret

Disassembly of section .text.avrlibc:

00000c9a <memcpy>:
 c9a:	cf 92       	push	r12
 c9c:	df 92       	push	r13
 c9e:	ef 92       	push	r14
 ca0:	dc 01       	movw	r26, r24
 ca2:	6a 01       	movw	r12, r20
 ca4:	e6 2e       	mov	r14, r22
 ca6:	28 0f       	add	r18, r24
 ca8:	39 1f       	adc	r19, r25
 caa:	a2 17       	cp	r26, r18
 cac:	b3 07       	cpc	r27, r19
 cae:	51 f0       	breq	.+20     	; 0xcc4 <memcpy+0x2a>
 cb0:	f6 01       	movw	r30, r12
 cb2:	5e 2d       	mov	r21, r14
 cb4:	0e 94 49 07 	call	0xe92	; 0xe92 <__xload_1>
 cb8:	6d 93       	st	X+, r22
 cba:	4f ef       	ldi	r20, 0xFF	; 255
 cbc:	c4 1a       	sub	r12, r20
 cbe:	d4 0a       	sbc	r13, r20
 cc0:	e4 0a       	sbc	r14, r20
 cc2:	f3 cf       	rjmp	.-26     	; 0xcaa <memcpy+0x10>
 cc4:	ef 90       	pop	r14
 cc6:	df 90       	pop	r13
 cc8:	cf 90       	pop	r12
 cca:	08 95       	ret

Disassembly of section .text.avrlibc:

00000ccc <strcat>:
 ccc:	9a 01       	movw	r18, r20
 cce:	46 2f       	mov	r20, r22
 cd0:	dc 01       	movw	r26, r24
 cd2:	bd 01       	movw	r22, r26
 cd4:	6f 5f       	subi	r22, 0xFF	; 255
 cd6:	7f 4f       	sbci	r23, 0xFF	; 255
 cd8:	5c 91       	ld	r21, X
 cda:	55 23       	and	r21, r21
 cdc:	11 f0       	breq	.+4      	; 0xce2 <strcat+0x16>
 cde:	db 01       	movw	r26, r22
 ce0:	f8 cf       	rjmp	.-16     	; 0xcd2 <strcat+0x6>
 ce2:	f9 01       	movw	r30, r18
 ce4:	54 2f       	mov	r21, r20
 ce6:	0e 94 49 07 	call	0xe92	; 0xe92 <__xload_1>
 cea:	6d 93       	st	X+, r22
 cec:	66 23       	and	r22, r22
 cee:	21 f0       	breq	.+8      	; 0xcf8 <strcat+0x2c>
 cf0:	2f 5f       	subi	r18, 0xFF	; 255
 cf2:	3f 4f       	sbci	r19, 0xFF	; 255
 cf4:	4f 4f       	sbci	r20, 0xFF	; 255
 cf6:	f5 cf       	rjmp	.-22     	; 0xce2 <strcat+0x16>
 cf8:	08 95       	ret

Disassembly of section .text.avrlibc:

00000234 <dtoa_prf>:
 234:	8f 92       	push	r8
 236:	9f 92       	push	r9
 238:	af 92       	push	r10
 23a:	bf 92       	push	r11
 23c:	cf 92       	push	r12
 23e:	df 92       	push	r13
 240:	ef 92       	push	r14
 242:	ff 92       	push	r15
 244:	0f 93       	push	r16
 246:	1f 93       	push	r17
 248:	cf 93       	push	r28
 24a:	df 93       	push	r29
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
 250:	29 97       	sbiw	r28, 0x09	; 9
 252:	0f b6       	in	r0, 0x3f	; 63
 254:	f8 94       	cli
 256:	de bf       	out	0x3e, r29	; 62
 258:	0f be       	out	0x3f, r0	; 63
 25a:	cd bf       	out	0x3d, r28	; 61
 25c:	6a 01       	movw	r12, r20
 25e:	12 2f       	mov	r17, r18
 260:	b0 2e       	mov	r11, r16
 262:	2b e3       	ldi	r18, 0x3B	; 59
 264:	20 17       	cp	r18, r16
 266:	20 f0       	brcs	.+8      	; 0x270 <dtoa_prf+0x3c>
 268:	ff 24       	eor	r15, r15
 26a:	f3 94       	inc	r15
 26c:	f0 0e       	add	r15, r16
 26e:	02 c0       	rjmp	.+4      	; 0x274 <dtoa_prf+0x40>
 270:	2c e3       	ldi	r18, 0x3C	; 60
 272:	f2 2e       	mov	r15, r18
 274:	0f 2d       	mov	r16, r15
 276:	27 e0       	ldi	r18, 0x07	; 7
 278:	ae 01       	movw	r20, r28
 27a:	4f 5f       	subi	r20, 0xFF	; 255
 27c:	5f 4f       	sbci	r21, 0xFF	; 255
 27e:	0e 94 91 02 	call	0x522	; 0x522 <__ftoa_engine>
 282:	bc 01       	movw	r22, r24
 284:	49 81       	ldd	r20, Y+1	; 0x01
 286:	84 2f       	mov	r24, r20
 288:	89 70       	andi	r24, 0x09	; 9
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	31 f0       	breq	.+12     	; 0x29a <dtoa_prf+0x66>
 28e:	e1 fc       	sbrc	r14, 1
 290:	06 c0       	rjmp	.+12     	; 0x29e <dtoa_prf+0x6a>
 292:	e0 fe       	sbrs	r14, 0
 294:	06 c0       	rjmp	.+12     	; 0x2a2 <dtoa_prf+0x6e>
 296:	90 e2       	ldi	r25, 0x20	; 32
 298:	05 c0       	rjmp	.+10     	; 0x2a4 <dtoa_prf+0x70>
 29a:	9d e2       	ldi	r25, 0x2D	; 45
 29c:	03 c0       	rjmp	.+6      	; 0x2a4 <dtoa_prf+0x70>
 29e:	9b e2       	ldi	r25, 0x2B	; 43
 2a0:	01 c0       	rjmp	.+2      	; 0x2a4 <dtoa_prf+0x70>
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	5e 2d       	mov	r21, r14
 2a6:	50 71       	andi	r21, 0x10	; 16
 2a8:	43 ff       	sbrs	r20, 3
 2aa:	3c c0       	rjmp	.+120    	; 0x324 <dtoa_prf+0xf0>
 2ac:	91 11       	cpse	r25, r1
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <dtoa_prf+0x80>
 2b0:	83 e0       	ldi	r24, 0x03	; 3
 2b2:	01 c0       	rjmp	.+2      	; 0x2b6 <dtoa_prf+0x82>
 2b4:	84 e0       	ldi	r24, 0x04	; 4
 2b6:	81 17       	cp	r24, r17
 2b8:	18 f4       	brcc	.+6      	; 0x2c0 <dtoa_prf+0x8c>
 2ba:	21 2f       	mov	r18, r17
 2bc:	28 1b       	sub	r18, r24
 2be:	01 c0       	rjmp	.+2      	; 0x2c2 <dtoa_prf+0x8e>
 2c0:	20 e0       	ldi	r18, 0x00	; 0
 2c2:	51 11       	cpse	r21, r1
 2c4:	0b c0       	rjmp	.+22     	; 0x2dc <dtoa_prf+0xa8>
 2c6:	f6 01       	movw	r30, r12
 2c8:	82 2f       	mov	r24, r18
 2ca:	30 e2       	ldi	r19, 0x20	; 32
 2cc:	88 23       	and	r24, r24
 2ce:	19 f0       	breq	.+6      	; 0x2d6 <dtoa_prf+0xa2>
 2d0:	31 93       	st	Z+, r19
 2d2:	81 50       	subi	r24, 0x01	; 1
 2d4:	fb cf       	rjmp	.-10     	; 0x2cc <dtoa_prf+0x98>
 2d6:	c2 0e       	add	r12, r18
 2d8:	d1 1c       	adc	r13, r1
 2da:	20 e0       	ldi	r18, 0x00	; 0
 2dc:	99 23       	and	r25, r25
 2de:	29 f0       	breq	.+10     	; 0x2ea <dtoa_prf+0xb6>
 2e0:	d6 01       	movw	r26, r12
 2e2:	9c 93       	st	X, r25
 2e4:	f6 01       	movw	r30, r12
 2e6:	31 96       	adiw	r30, 0x01	; 1
 2e8:	6f 01       	movw	r12, r30
 2ea:	c6 01       	movw	r24, r12
 2ec:	03 96       	adiw	r24, 0x03	; 3
 2ee:	e2 fe       	sbrs	r14, 2
 2f0:	0a c0       	rjmp	.+20     	; 0x306 <dtoa_prf+0xd2>
 2f2:	3e e4       	ldi	r19, 0x4E	; 78
 2f4:	d6 01       	movw	r26, r12
 2f6:	3c 93       	st	X, r19
 2f8:	41 e4       	ldi	r20, 0x41	; 65
 2fa:	11 96       	adiw	r26, 0x01	; 1
 2fc:	4c 93       	st	X, r20
 2fe:	11 97       	sbiw	r26, 0x01	; 1
 300:	12 96       	adiw	r26, 0x02	; 2
 302:	3c 93       	st	X, r19
 304:	06 c0       	rjmp	.+12     	; 0x312 <dtoa_prf+0xde>
 306:	3e e6       	ldi	r19, 0x6E	; 110
 308:	f6 01       	movw	r30, r12
 30a:	30 83       	st	Z, r19
 30c:	41 e6       	ldi	r20, 0x61	; 97
 30e:	41 83       	std	Z+1, r20	; 0x01
 310:	32 83       	std	Z+2, r19	; 0x02
 312:	fc 01       	movw	r30, r24
 314:	32 2f       	mov	r19, r18
 316:	40 e2       	ldi	r20, 0x20	; 32
 318:	33 23       	and	r19, r19
 31a:	09 f4       	brne	.+2      	; 0x31e <dtoa_prf+0xea>
 31c:	42 c0       	rjmp	.+132    	; 0x3a2 <dtoa_prf+0x16e>
 31e:	41 93       	st	Z+, r20
 320:	31 50       	subi	r19, 0x01	; 1
 322:	fa cf       	rjmp	.-12     	; 0x318 <dtoa_prf+0xe4>
 324:	42 ff       	sbrs	r20, 2
 326:	44 c0       	rjmp	.+136    	; 0x3b0 <dtoa_prf+0x17c>
 328:	91 11       	cpse	r25, r1
 32a:	02 c0       	rjmp	.+4      	; 0x330 <dtoa_prf+0xfc>
 32c:	83 e0       	ldi	r24, 0x03	; 3
 32e:	01 c0       	rjmp	.+2      	; 0x332 <dtoa_prf+0xfe>
 330:	84 e0       	ldi	r24, 0x04	; 4
 332:	81 17       	cp	r24, r17
 334:	18 f4       	brcc	.+6      	; 0x33c <dtoa_prf+0x108>
 336:	21 2f       	mov	r18, r17
 338:	28 1b       	sub	r18, r24
 33a:	01 c0       	rjmp	.+2      	; 0x33e <dtoa_prf+0x10a>
 33c:	20 e0       	ldi	r18, 0x00	; 0
 33e:	51 11       	cpse	r21, r1
 340:	0b c0       	rjmp	.+22     	; 0x358 <dtoa_prf+0x124>
 342:	f6 01       	movw	r30, r12
 344:	82 2f       	mov	r24, r18
 346:	30 e2       	ldi	r19, 0x20	; 32
 348:	88 23       	and	r24, r24
 34a:	19 f0       	breq	.+6      	; 0x352 <dtoa_prf+0x11e>
 34c:	31 93       	st	Z+, r19
 34e:	81 50       	subi	r24, 0x01	; 1
 350:	fb cf       	rjmp	.-10     	; 0x348 <dtoa_prf+0x114>
 352:	c2 0e       	add	r12, r18
 354:	d1 1c       	adc	r13, r1
 356:	20 e0       	ldi	r18, 0x00	; 0
 358:	99 23       	and	r25, r25
 35a:	29 f0       	breq	.+10     	; 0x366 <dtoa_prf+0x132>
 35c:	d6 01       	movw	r26, r12
 35e:	9c 93       	st	X, r25
 360:	f6 01       	movw	r30, r12
 362:	31 96       	adiw	r30, 0x01	; 1
 364:	6f 01       	movw	r12, r30
 366:	c6 01       	movw	r24, r12
 368:	03 96       	adiw	r24, 0x03	; 3
 36a:	e2 fe       	sbrs	r14, 2
 36c:	0b c0       	rjmp	.+22     	; 0x384 <dtoa_prf+0x150>
 36e:	39 e4       	ldi	r19, 0x49	; 73
 370:	d6 01       	movw	r26, r12
 372:	3c 93       	st	X, r19
 374:	3e e4       	ldi	r19, 0x4E	; 78
 376:	11 96       	adiw	r26, 0x01	; 1
 378:	3c 93       	st	X, r19
 37a:	11 97       	sbiw	r26, 0x01	; 1
 37c:	36 e4       	ldi	r19, 0x46	; 70
 37e:	12 96       	adiw	r26, 0x02	; 2
 380:	3c 93       	st	X, r19
 382:	07 c0       	rjmp	.+14     	; 0x392 <dtoa_prf+0x15e>
 384:	39 e6       	ldi	r19, 0x69	; 105
 386:	f6 01       	movw	r30, r12
 388:	30 83       	st	Z, r19
 38a:	3e e6       	ldi	r19, 0x6E	; 110
 38c:	31 83       	std	Z+1, r19	; 0x01
 38e:	36 e6       	ldi	r19, 0x66	; 102
 390:	32 83       	std	Z+2, r19	; 0x02
 392:	fc 01       	movw	r30, r24
 394:	32 2f       	mov	r19, r18
 396:	40 e2       	ldi	r20, 0x20	; 32
 398:	33 23       	and	r19, r19
 39a:	19 f0       	breq	.+6      	; 0x3a2 <dtoa_prf+0x16e>
 39c:	41 93       	st	Z+, r20
 39e:	31 50       	subi	r19, 0x01	; 1
 3a0:	fb cf       	rjmp	.-10     	; 0x398 <dtoa_prf+0x164>
 3a2:	fc 01       	movw	r30, r24
 3a4:	e2 0f       	add	r30, r18
 3a6:	f1 1d       	adc	r31, r1
 3a8:	10 82       	st	Z, r1
 3aa:	8e ef       	ldi	r24, 0xFE	; 254
 3ac:	9f ef       	ldi	r25, 0xFF	; 255
 3ae:	a6 c0       	rjmp	.+332    	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 3b0:	21 e0       	ldi	r18, 0x01	; 1
 3b2:	30 e0       	ldi	r19, 0x00	; 0
 3b4:	91 11       	cpse	r25, r1
 3b6:	02 c0       	rjmp	.+4      	; 0x3bc <dtoa_prf+0x188>
 3b8:	20 e0       	ldi	r18, 0x00	; 0
 3ba:	30 e0       	ldi	r19, 0x00	; 0
 3bc:	16 16       	cp	r1, r22
 3be:	17 06       	cpc	r1, r23
 3c0:	1c f4       	brge	.+6      	; 0x3c8 <dtoa_prf+0x194>
 3c2:	fb 01       	movw	r30, r22
 3c4:	31 96       	adiw	r30, 0x01	; 1
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <dtoa_prf+0x198>
 3c8:	e1 e0       	ldi	r30, 0x01	; 1
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	2e 0f       	add	r18, r30
 3ce:	3f 1f       	adc	r19, r31
 3d0:	bb 20       	and	r11, r11
 3d2:	21 f0       	breq	.+8      	; 0x3dc <dtoa_prf+0x1a8>
 3d4:	eb 2d       	mov	r30, r11
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	31 96       	adiw	r30, 0x01	; 1
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <dtoa_prf+0x1ac>
 3dc:	e0 e0       	ldi	r30, 0x00	; 0
 3de:	f0 e0       	ldi	r31, 0x00	; 0
 3e0:	2e 0f       	add	r18, r30
 3e2:	3f 1f       	adc	r19, r31
 3e4:	e1 2f       	mov	r30, r17
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	2e 17       	cp	r18, r30
 3ea:	3f 07       	cpc	r19, r31
 3ec:	1c f4       	brge	.+6      	; 0x3f4 <dtoa_prf+0x1c0>
 3ee:	12 1b       	sub	r17, r18
 3f0:	21 2f       	mov	r18, r17
 3f2:	01 c0       	rjmp	.+2      	; 0x3f6 <dtoa_prf+0x1c2>
 3f4:	20 e0       	ldi	r18, 0x00	; 0
 3f6:	8e 2d       	mov	r24, r14
 3f8:	88 71       	andi	r24, 0x18	; 24
 3fa:	59 f4       	brne	.+22     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 3fc:	f6 01       	movw	r30, r12
 3fe:	82 2f       	mov	r24, r18
 400:	30 e2       	ldi	r19, 0x20	; 32
 402:	88 23       	and	r24, r24
 404:	19 f0       	breq	.+6      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 406:	31 93       	st	Z+, r19
 408:	81 50       	subi	r24, 0x01	; 1
 40a:	fb cf       	rjmp	.-10     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 40c:	c2 0e       	add	r12, r18
 40e:	d1 1c       	adc	r13, r1
 410:	20 e0       	ldi	r18, 0x00	; 0
 412:	99 23       	and	r25, r25
 414:	29 f0       	breq	.+10     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 416:	d6 01       	movw	r26, r12
 418:	9c 93       	st	X, r25
 41a:	f6 01       	movw	r30, r12
 41c:	31 96       	adiw	r30, 0x01	; 1
 41e:	6f 01       	movw	r12, r30
 420:	51 11       	cpse	r21, r1
 422:	0b c0       	rjmp	.+22     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 424:	f6 01       	movw	r30, r12
 426:	82 2f       	mov	r24, r18
 428:	90 e3       	ldi	r25, 0x30	; 48
 42a:	88 23       	and	r24, r24
 42c:	19 f0       	breq	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42e:	91 93       	st	Z+, r25
 430:	81 50       	subi	r24, 0x01	; 1
 432:	fb cf       	rjmp	.-10     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 434:	c2 0e       	add	r12, r18
 436:	d1 1c       	adc	r13, r1
 438:	20 e0       	ldi	r18, 0x00	; 0
 43a:	0f 2d       	mov	r16, r15
 43c:	06 0f       	add	r16, r22
 43e:	9a 81       	ldd	r25, Y+2	; 0x02
 440:	34 2f       	mov	r19, r20
 442:	30 71       	andi	r19, 0x10	; 16
 444:	44 ff       	sbrs	r20, 4
 446:	03 c0       	rjmp	.+6      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 448:	91 33       	cpi	r25, 0x31	; 49
 44a:	09 f4       	brne	.+2      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44c:	01 50       	subi	r16, 0x01	; 1
 44e:	10 16       	cp	r1, r16
 450:	24 f4       	brge	.+8      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 452:	09 30       	cpi	r16, 0x09	; 9
 454:	18 f0       	brcs	.+6      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 456:	08 e0       	ldi	r16, 0x08	; 8
 458:	01 c0       	rjmp	.+2      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 45a:	01 e0       	ldi	r16, 0x01	; 1
 45c:	ab 01       	movw	r20, r22
 45e:	77 ff       	sbrs	r23, 7
 460:	02 c0       	rjmp	.+4      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 462:	40 e0       	ldi	r20, 0x00	; 0
 464:	50 e0       	ldi	r21, 0x00	; 0
 466:	fb 01       	movw	r30, r22
 468:	e4 1b       	sub	r30, r20
 46a:	f5 0b       	sbc	r31, r21
 46c:	a1 e0       	ldi	r26, 0x01	; 1
 46e:	b0 e0       	ldi	r27, 0x00	; 0
 470:	ac 0f       	add	r26, r28
 472:	bd 1f       	adc	r27, r29
 474:	ea 0f       	add	r30, r26
 476:	fb 1f       	adc	r31, r27
 478:	8e e2       	ldi	r24, 0x2E	; 46
 47a:	a8 2e       	mov	r10, r24
 47c:	4b 01       	movw	r8, r22
 47e:	80 1a       	sub	r8, r16
 480:	91 08       	sbc	r9, r1
 482:	0b 2d       	mov	r16, r11
 484:	10 e0       	ldi	r17, 0x00	; 0
 486:	11 95       	neg	r17
 488:	01 95       	neg	r16
 48a:	11 09       	sbc	r17, r1
 48c:	4f 3f       	cpi	r20, 0xFF	; 255
 48e:	bf ef       	ldi	r27, 0xFF	; 255
 490:	5b 07       	cpc	r21, r27
 492:	21 f4       	brne	.+8      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 494:	d6 01       	movw	r26, r12
 496:	ac 92       	st	X, r10
 498:	11 96       	adiw	r26, 0x01	; 1
 49a:	6d 01       	movw	r12, r26
 49c:	64 17       	cp	r22, r20
 49e:	75 07       	cpc	r23, r21
 4a0:	2c f0       	brlt	.+10     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a2:	84 16       	cp	r8, r20
 4a4:	95 06       	cpc	r9, r21
 4a6:	14 f4       	brge	.+4      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a8:	81 81       	ldd	r24, Z+1	; 0x01
 4aa:	01 c0       	rjmp	.+2      	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4ac:	80 e3       	ldi	r24, 0x30	; 48
 4ae:	41 50       	subi	r20, 0x01	; 1
 4b0:	51 09       	sbc	r21, r1
 4b2:	31 96       	adiw	r30, 0x01	; 1
 4b4:	d6 01       	movw	r26, r12
 4b6:	11 96       	adiw	r26, 0x01	; 1
 4b8:	7d 01       	movw	r14, r26
 4ba:	40 17       	cp	r20, r16
 4bc:	51 07       	cpc	r21, r17
 4be:	24 f0       	brlt	.+8      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c0:	d6 01       	movw	r26, r12
 4c2:	8c 93       	st	X, r24
 4c4:	67 01       	movw	r12, r14
 4c6:	e2 cf       	rjmp	.-60     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 4c8:	64 17       	cp	r22, r20
 4ca:	75 07       	cpc	r23, r21
 4cc:	39 f4       	brne	.+14     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4ce:	96 33       	cpi	r25, 0x36	; 54
 4d0:	20 f4       	brcc	.+8      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d2:	95 33       	cpi	r25, 0x35	; 53
 4d4:	19 f4       	brne	.+6      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4d6:	31 11       	cpse	r19, r1
 4d8:	01 c0       	rjmp	.+2      	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4da:	81 e3       	ldi	r24, 0x31	; 49
 4dc:	f6 01       	movw	r30, r12
 4de:	80 83       	st	Z, r24
 4e0:	f7 01       	movw	r30, r14
 4e2:	82 2f       	mov	r24, r18
 4e4:	90 e2       	ldi	r25, 0x20	; 32
 4e6:	88 23       	and	r24, r24
 4e8:	19 f0       	breq	.+6      	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4ea:	91 93       	st	Z+, r25
 4ec:	81 50       	subi	r24, 0x01	; 1
 4ee:	fb cf       	rjmp	.-10     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4f0:	f7 01       	movw	r30, r14
 4f2:	e2 0f       	add	r30, r18
 4f4:	f1 1d       	adc	r31, r1
 4f6:	10 82       	st	Z, r1
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	90 e0       	ldi	r25, 0x00	; 0
 4fc:	29 96       	adiw	r28, 0x09	; 9
 4fe:	0f b6       	in	r0, 0x3f	; 63
 500:	f8 94       	cli
 502:	de bf       	out	0x3e, r29	; 62
 504:	0f be       	out	0x3f, r0	; 63
 506:	cd bf       	out	0x3d, r28	; 61
 508:	df 91       	pop	r29
 50a:	cf 91       	pop	r28
 50c:	1f 91       	pop	r17
 50e:	0f 91       	pop	r16
 510:	ff 90       	pop	r15
 512:	ef 90       	pop	r14
 514:	df 90       	pop	r13
 516:	cf 90       	pop	r12
 518:	bf 90       	pop	r11
 51a:	af 90       	pop	r10
 51c:	9f 90       	pop	r9
 51e:	8f 90       	pop	r8
 520:	08 95       	ret

Disassembly of section .text.avrlibc:

00000522 <__ftoa_engine>:
 522:	28 30       	cpi	r18, 0x08	; 8
 524:	08 f0       	brcs	.+2      	; 0x528 <__ftoa_engine+0x6>
 526:	27 e0       	ldi	r18, 0x07	; 7
 528:	33 27       	eor	r19, r19
 52a:	da 01       	movw	r26, r20
 52c:	99 0f       	add	r25, r25
 52e:	31 1d       	adc	r19, r1
 530:	87 fd       	sbrc	r24, 7
 532:	91 60       	ori	r25, 0x01	; 1
 534:	00 96       	adiw	r24, 0x00	; 0
 536:	61 05       	cpc	r22, r1
 538:	71 05       	cpc	r23, r1
 53a:	39 f4       	brne	.+14     	; 0x54a <__ftoa_engine+0x28>
 53c:	32 60       	ori	r19, 0x02	; 2
 53e:	2e 5f       	subi	r18, 0xFE	; 254
 540:	3d 93       	st	X+, r19
 542:	30 e3       	ldi	r19, 0x30	; 48
 544:	2a 95       	dec	r18
 546:	e1 f7       	brne	.-8      	; 0x540 <__ftoa_engine+0x1e>
 548:	08 95       	ret
 54a:	9f 3f       	cpi	r25, 0xFF	; 255
 54c:	30 f0       	brcs	.+12     	; 0x55a <__ftoa_engine+0x38>
 54e:	80 38       	cpi	r24, 0x80	; 128
 550:	71 05       	cpc	r23, r1
 552:	61 05       	cpc	r22, r1
 554:	09 f0       	breq	.+2      	; 0x558 <__ftoa_engine+0x36>
 556:	3c 5f       	subi	r19, 0xFC	; 252
 558:	3c 5f       	subi	r19, 0xFC	; 252
 55a:	3d 93       	st	X+, r19
 55c:	91 30       	cpi	r25, 0x01	; 1
 55e:	08 f0       	brcs	.+2      	; 0x562 <__ftoa_engine+0x40>
 560:	80 68       	ori	r24, 0x80	; 128
 562:	91 1d       	adc	r25, r1
 564:	df 93       	push	r29
 566:	cf 93       	push	r28
 568:	1f 93       	push	r17
 56a:	0f 93       	push	r16
 56c:	ff 92       	push	r15
 56e:	ef 92       	push	r14
 570:	19 2f       	mov	r17, r25
 572:	98 7f       	andi	r25, 0xF8	; 248
 574:	96 95       	lsr	r25
 576:	e9 2f       	mov	r30, r25
 578:	96 95       	lsr	r25
 57a:	96 95       	lsr	r25
 57c:	e9 0f       	add	r30, r25
 57e:	ff 27       	eor	r31, r31
 580:	ee 5e       	subi	r30, 0xEE	; 238
 582:	fe 4f       	sbci	r31, 0xFE	; 254
 584:	99 27       	eor	r25, r25
 586:	33 27       	eor	r19, r19
 588:	ee 24       	eor	r14, r14
 58a:	ff 24       	eor	r15, r15
 58c:	a7 01       	movw	r20, r14
 58e:	e7 01       	movw	r28, r14
 590:	05 90       	lpm	r0, Z+
 592:	08 94       	sec
 594:	07 94       	ror	r0
 596:	28 f4       	brcc	.+10     	; 0x5a2 <__ftoa_engine+0x80>
 598:	36 0f       	add	r19, r22
 59a:	e7 1e       	adc	r14, r23
 59c:	f8 1e       	adc	r15, r24
 59e:	49 1f       	adc	r20, r25
 5a0:	51 1d       	adc	r21, r1
 5a2:	66 0f       	add	r22, r22
 5a4:	77 1f       	adc	r23, r23
 5a6:	88 1f       	adc	r24, r24
 5a8:	99 1f       	adc	r25, r25
 5aa:	06 94       	lsr	r0
 5ac:	a1 f7       	brne	.-24     	; 0x596 <__ftoa_engine+0x74>
 5ae:	05 90       	lpm	r0, Z+
 5b0:	07 94       	ror	r0
 5b2:	28 f4       	brcc	.+10     	; 0x5be <__ftoa_engine+0x9c>
 5b4:	e7 0e       	add	r14, r23
 5b6:	f8 1e       	adc	r15, r24
 5b8:	49 1f       	adc	r20, r25
 5ba:	56 1f       	adc	r21, r22
 5bc:	c1 1d       	adc	r28, r1
 5be:	77 0f       	add	r23, r23
 5c0:	88 1f       	adc	r24, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	66 1f       	adc	r22, r22
 5c6:	06 94       	lsr	r0
 5c8:	a1 f7       	brne	.-24     	; 0x5b2 <__ftoa_engine+0x90>
 5ca:	05 90       	lpm	r0, Z+
 5cc:	07 94       	ror	r0
 5ce:	28 f4       	brcc	.+10     	; 0x5da <__ftoa_engine+0xb8>
 5d0:	f8 0e       	add	r15, r24
 5d2:	49 1f       	adc	r20, r25
 5d4:	56 1f       	adc	r21, r22
 5d6:	c7 1f       	adc	r28, r23
 5d8:	d1 1d       	adc	r29, r1
 5da:	88 0f       	add	r24, r24
 5dc:	99 1f       	adc	r25, r25
 5de:	66 1f       	adc	r22, r22
 5e0:	77 1f       	adc	r23, r23
 5e2:	06 94       	lsr	r0
 5e4:	a1 f7       	brne	.-24     	; 0x5ce <__ftoa_engine+0xac>
 5e6:	05 90       	lpm	r0, Z+
 5e8:	07 94       	ror	r0
 5ea:	20 f4       	brcc	.+8      	; 0x5f4 <__ftoa_engine+0xd2>
 5ec:	49 0f       	add	r20, r25
 5ee:	56 1f       	adc	r21, r22
 5f0:	c7 1f       	adc	r28, r23
 5f2:	d8 1f       	adc	r29, r24
 5f4:	99 0f       	add	r25, r25
 5f6:	66 1f       	adc	r22, r22
 5f8:	77 1f       	adc	r23, r23
 5fa:	88 1f       	adc	r24, r24
 5fc:	06 94       	lsr	r0
 5fe:	a9 f7       	brne	.-22     	; 0x5ea <__ftoa_engine+0xc8>
 600:	84 91       	lpm	r24, Z
 602:	10 95       	com	r17
 604:	17 70       	andi	r17, 0x07	; 7
 606:	41 f0       	breq	.+16     	; 0x618 <__ftoa_engine+0xf6>
 608:	d6 95       	lsr	r29
 60a:	c7 95       	ror	r28
 60c:	57 95       	ror	r21
 60e:	47 95       	ror	r20
 610:	f7 94       	ror	r15
 612:	e7 94       	ror	r14
 614:	1a 95       	dec	r17
 616:	c1 f7       	brne	.-16     	; 0x608 <__ftoa_engine+0xe6>
 618:	e8 eb       	ldi	r30, 0xB8	; 184
 61a:	f0 e0       	ldi	r31, 0x00	; 0
 61c:	68 94       	set
 61e:	15 90       	lpm	r1, Z+
 620:	15 91       	lpm	r17, Z+
 622:	35 91       	lpm	r19, Z+
 624:	65 91       	lpm	r22, Z+
 626:	95 91       	lpm	r25, Z+
 628:	05 90       	lpm	r0, Z+
 62a:	7f e2       	ldi	r23, 0x2F	; 47
 62c:	73 95       	inc	r23
 62e:	e1 18       	sub	r14, r1
 630:	f1 0a       	sbc	r15, r17
 632:	43 0b       	sbc	r20, r19
 634:	56 0b       	sbc	r21, r22
 636:	c9 0b       	sbc	r28, r25
 638:	d0 09       	sbc	r29, r0
 63a:	c0 f7       	brcc	.-16     	; 0x62c <__ftoa_engine+0x10a>
 63c:	e1 0c       	add	r14, r1
 63e:	f1 1e       	adc	r15, r17
 640:	43 1f       	adc	r20, r19
 642:	56 1f       	adc	r21, r22
 644:	c9 1f       	adc	r28, r25
 646:	d0 1d       	adc	r29, r0
 648:	7e f4       	brtc	.+30     	; 0x668 <__ftoa_engine+0x146>
 64a:	70 33       	cpi	r23, 0x30	; 48
 64c:	11 f4       	brne	.+4      	; 0x652 <__ftoa_engine+0x130>
 64e:	8a 95       	dec	r24
 650:	e6 cf       	rjmp	.-52     	; 0x61e <__ftoa_engine+0xfc>
 652:	e8 94       	clt
 654:	01 50       	subi	r16, 0x01	; 1
 656:	30 f0       	brcs	.+12     	; 0x664 <__ftoa_engine+0x142>
 658:	08 0f       	add	r16, r24
 65a:	0a f4       	brpl	.+2      	; 0x65e <__ftoa_engine+0x13c>
 65c:	00 27       	eor	r16, r16
 65e:	02 17       	cp	r16, r18
 660:	08 f4       	brcc	.+2      	; 0x664 <__ftoa_engine+0x142>
 662:	20 2f       	mov	r18, r16
 664:	23 95       	inc	r18
 666:	02 2f       	mov	r16, r18
 668:	7a 33       	cpi	r23, 0x3A	; 58
 66a:	28 f0       	brcs	.+10     	; 0x676 <__ftoa_engine+0x154>
 66c:	79 e3       	ldi	r23, 0x39	; 57
 66e:	7d 93       	st	X+, r23
 670:	2a 95       	dec	r18
 672:	e9 f7       	brne	.-6      	; 0x66e <__ftoa_engine+0x14c>
 674:	10 c0       	rjmp	.+32     	; 0x696 <__ftoa_engine+0x174>
 676:	7d 93       	st	X+, r23
 678:	2a 95       	dec	r18
 67a:	89 f6       	brne	.-94     	; 0x61e <__ftoa_engine+0xfc>
 67c:	06 94       	lsr	r0
 67e:	97 95       	ror	r25
 680:	67 95       	ror	r22
 682:	37 95       	ror	r19
 684:	17 95       	ror	r17
 686:	17 94       	ror	r1
 688:	e1 18       	sub	r14, r1
 68a:	f1 0a       	sbc	r15, r17
 68c:	43 0b       	sbc	r20, r19
 68e:	56 0b       	sbc	r21, r22
 690:	c9 0b       	sbc	r28, r25
 692:	d0 09       	sbc	r29, r0
 694:	98 f0       	brcs	.+38     	; 0x6bc <__ftoa_engine+0x19a>
 696:	23 95       	inc	r18
 698:	7e 91       	ld	r23, -X
 69a:	73 95       	inc	r23
 69c:	7a 33       	cpi	r23, 0x3A	; 58
 69e:	08 f0       	brcs	.+2      	; 0x6a2 <__ftoa_engine+0x180>
 6a0:	70 e3       	ldi	r23, 0x30	; 48
 6a2:	7c 93       	st	X, r23
 6a4:	20 13       	cpse	r18, r16
 6a6:	b8 f7       	brcc	.-18     	; 0x696 <__ftoa_engine+0x174>
 6a8:	7e 91       	ld	r23, -X
 6aa:	70 61       	ori	r23, 0x10	; 16
 6ac:	7d 93       	st	X+, r23
 6ae:	30 f0       	brcs	.+12     	; 0x6bc <__ftoa_engine+0x19a>
 6b0:	83 95       	inc	r24
 6b2:	71 e3       	ldi	r23, 0x31	; 49
 6b4:	7d 93       	st	X+, r23
 6b6:	70 e3       	ldi	r23, 0x30	; 48
 6b8:	2a 95       	dec	r18
 6ba:	e1 f7       	brne	.-8      	; 0x6b4 <__ftoa_engine+0x192>
 6bc:	11 24       	eor	r1, r1
 6be:	ef 90       	pop	r14
 6c0:	ff 90       	pop	r15
 6c2:	0f 91       	pop	r16
 6c4:	1f 91       	pop	r17
 6c6:	cf 91       	pop	r28
 6c8:	df 91       	pop	r29
 6ca:	99 27       	eor	r25, r25
 6cc:	87 fd       	sbrc	r24, 7
 6ce:	90 95       	com	r25
 6d0:	08 95       	ret

Disassembly of section .text.libgcc:

00000e92 <__xload_1>:
 e92:	57 fd       	sbrc	r21, 7
 e94:	03 c0       	rjmp	.+6      	; 0xe9c <__xload_1+0xa>
 e96:	5b bf       	out	0x3b, r21	; 59
 e98:	67 91       	elpm	r22, Z+
 e9a:	08 95       	ret
 e9c:	60 81       	ld	r22, Z
 e9e:	08 95       	ret
